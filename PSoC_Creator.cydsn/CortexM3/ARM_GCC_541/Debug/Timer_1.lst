ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccvObFln.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Timer_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Timer_1_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	Timer_1_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	Timer_1_Enable, %function
  25              	Timer_1_Enable:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\Timer_1.c"
   1:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/Timer_1.c **** * File Name: Timer_1.c
   3:Generated_Source\PSoC5/Timer_1.c **** * Version 2.80
   4:Generated_Source\PSoC5/Timer_1.c **** *
   5:Generated_Source\PSoC5/Timer_1.c **** * Description:
   6:Generated_Source\PSoC5/Timer_1.c **** *  The Timer component consists of a 8, 16, 24 or 32-bit timer with
   7:Generated_Source\PSoC5/Timer_1.c **** *  a selectable period between 2 and 2^Width - 1.  The timer may free run
   8:Generated_Source\PSoC5/Timer_1.c **** *  or be used as a capture timer as well.  The capture can be initiated
   9:Generated_Source\PSoC5/Timer_1.c **** *  by a positive or negative edge signal as well as via software.
  10:Generated_Source\PSoC5/Timer_1.c **** *  A trigger input can be programmed to enable the timer on rising edge
  11:Generated_Source\PSoC5/Timer_1.c **** *  falling edge, either edge or continous run.
  12:Generated_Source\PSoC5/Timer_1.c **** *  Interrupts may be generated due to a terminal count condition
  13:Generated_Source\PSoC5/Timer_1.c **** *  or a capture event.
  14:Generated_Source\PSoC5/Timer_1.c **** *
  15:Generated_Source\PSoC5/Timer_1.c **** * Note:
  16:Generated_Source\PSoC5/Timer_1.c **** *
  17:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
  18:Generated_Source\PSoC5/Timer_1.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/Timer_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/Timer_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/Timer_1.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/Timer_1.c **** 
  24:Generated_Source\PSoC5/Timer_1.c **** #include "Timer_1.h"
  25:Generated_Source\PSoC5/Timer_1.c **** 
  26:Generated_Source\PSoC5/Timer_1.c **** uint8 Timer_1_initVar = 0u;
  27:Generated_Source\PSoC5/Timer_1.c **** 
  28:Generated_Source\PSoC5/Timer_1.c **** 
  29:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
  30:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_Init
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccvObFln.s 			page 2


  31:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
  32:Generated_Source\PSoC5/Timer_1.c **** *
  33:Generated_Source\PSoC5/Timer_1.c **** * Summary:
  34:Generated_Source\PSoC5/Timer_1.c **** *  Initialize to the schematic state
  35:Generated_Source\PSoC5/Timer_1.c **** *
  36:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
  37:Generated_Source\PSoC5/Timer_1.c **** *  void
  38:Generated_Source\PSoC5/Timer_1.c **** *
  39:Generated_Source\PSoC5/Timer_1.c **** * Return:
  40:Generated_Source\PSoC5/Timer_1.c **** *  void
  41:Generated_Source\PSoC5/Timer_1.c **** *
  42:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
  43:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_Init(void) 
  44:Generated_Source\PSoC5/Timer_1.c **** {
  45:Generated_Source\PSoC5/Timer_1.c ****     #if(!Timer_1_UsingFixedFunction)
  46:Generated_Source\PSoC5/Timer_1.c ****             /* Interrupt State Backup for Critical Region*/
  47:Generated_Source\PSoC5/Timer_1.c ****             uint8 Timer_1_interruptState;
  48:Generated_Source\PSoC5/Timer_1.c ****     #endif /* Interrupt state back up for Fixed Function only */
  49:Generated_Source\PSoC5/Timer_1.c **** 
  50:Generated_Source\PSoC5/Timer_1.c ****     #if (Timer_1_UsingFixedFunction)
  51:Generated_Source\PSoC5/Timer_1.c ****         /* Clear all bits but the enable bit (if it's already set) for Timer operation */
  52:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_CONTROL &= Timer_1_CTRL_ENABLE;
  53:Generated_Source\PSoC5/Timer_1.c **** 
  54:Generated_Source\PSoC5/Timer_1.c ****         /* Clear the mode bits for continuous run mode */
  55:Generated_Source\PSoC5/Timer_1.c ****         #if (CY_PSOC5A)
  56:Generated_Source\PSoC5/Timer_1.c ****             Timer_1_CONTROL2 &= ((uint8)(~Timer_1_CTRL_MODE_MASK));
  57:Generated_Source\PSoC5/Timer_1.c ****         #endif /* Clear bits in CONTROL2 only in PSOC5A */
  58:Generated_Source\PSoC5/Timer_1.c **** 
  59:Generated_Source\PSoC5/Timer_1.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
  60:Generated_Source\PSoC5/Timer_1.c ****             Timer_1_CONTROL3 &= ((uint8)(~Timer_1_CTRL_MODE_MASK));
  61:Generated_Source\PSoC5/Timer_1.c ****         #endif /* CONTROL3 register exists only in PSoC3 OR PSoC5LP */
  62:Generated_Source\PSoC5/Timer_1.c **** 
  63:Generated_Source\PSoC5/Timer_1.c ****         /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  64:Generated_Source\PSoC5/Timer_1.c ****         #if (Timer_1_RunModeUsed != 0x0u)
  65:Generated_Source\PSoC5/Timer_1.c ****             /* Set 3rd bit of Control register to enable one shot mode */
  66:Generated_Source\PSoC5/Timer_1.c ****             Timer_1_CONTROL |= 0x04u;
  67:Generated_Source\PSoC5/Timer_1.c ****         #endif /* One Shot enabled only when RunModeUsed is not Continuous*/
  68:Generated_Source\PSoC5/Timer_1.c **** 
  69:Generated_Source\PSoC5/Timer_1.c ****         #if (Timer_1_RunModeUsed == 2)
  70:Generated_Source\PSoC5/Timer_1.c ****             #if (CY_PSOC5A)
  71:Generated_Source\PSoC5/Timer_1.c ****                 /* Set last 2 bits of control2 register if one shot(halt on
  72:Generated_Source\PSoC5/Timer_1.c ****                 interrupt) is enabled*/
  73:Generated_Source\PSoC5/Timer_1.c ****                 Timer_1_CONTROL2 |= 0x03u;
  74:Generated_Source\PSoC5/Timer_1.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL2 for PSoC5A */
  75:Generated_Source\PSoC5/Timer_1.c **** 
  76:Generated_Source\PSoC5/Timer_1.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  77:Generated_Source\PSoC5/Timer_1.c ****                 /* Set last 2 bits of control3 register if one shot(halt on
  78:Generated_Source\PSoC5/Timer_1.c ****                 interrupt) is enabled*/
  79:Generated_Source\PSoC5/Timer_1.c ****                 Timer_1_CONTROL3 |= 0x03u;
  80:Generated_Source\PSoC5/Timer_1.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL3 for PSoC3 or PSoC5LP */
  81:Generated_Source\PSoC5/Timer_1.c **** 
  82:Generated_Source\PSoC5/Timer_1.c ****         #endif /* Remove section if One Shot Halt on Interrupt is not enabled */
  83:Generated_Source\PSoC5/Timer_1.c **** 
  84:Generated_Source\PSoC5/Timer_1.c ****         #if (Timer_1_UsingHWEnable != 0)
  85:Generated_Source\PSoC5/Timer_1.c ****             #if (CY_PSOC5A)
  86:Generated_Source\PSoC5/Timer_1.c ****                 /* Set the default Run Mode of the Timer to Continuous */
  87:Generated_Source\PSoC5/Timer_1.c ****                 Timer_1_CONTROL2 |= Timer_1_CTRL_MODE_PULSEWIDTH;
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccvObFln.s 			page 3


  88:Generated_Source\PSoC5/Timer_1.c ****             #endif /* Set Continuous Run Mode in CONTROL2 for PSoC5A */
  89:Generated_Source\PSoC5/Timer_1.c **** 
  90:Generated_Source\PSoC5/Timer_1.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  91:Generated_Source\PSoC5/Timer_1.c ****                 /* Clear and Set ROD and COD bits of CFG2 register */
  92:Generated_Source\PSoC5/Timer_1.c ****                 Timer_1_CONTROL3 &= ((uint8)(~Timer_1_CTRL_RCOD_MASK));
  93:Generated_Source\PSoC5/Timer_1.c ****                 Timer_1_CONTROL3 |= Timer_1_CTRL_RCOD;
  94:Generated_Source\PSoC5/Timer_1.c **** 
  95:Generated_Source\PSoC5/Timer_1.c ****                 /* Clear and Enable the HW enable bit in CFG2 register */
  96:Generated_Source\PSoC5/Timer_1.c ****                 Timer_1_CONTROL3 &= ((uint8)(~Timer_1_CTRL_ENBL_MASK));
  97:Generated_Source\PSoC5/Timer_1.c ****                 Timer_1_CONTROL3 |= Timer_1_CTRL_ENBL;
  98:Generated_Source\PSoC5/Timer_1.c **** 
  99:Generated_Source\PSoC5/Timer_1.c ****                 /* Set the default Run Mode of the Timer to Continuous */
 100:Generated_Source\PSoC5/Timer_1.c ****                 Timer_1_CONTROL3 |= Timer_1_CTRL_MODE_CONTINUOUS;
 101:Generated_Source\PSoC5/Timer_1.c ****             #endif /* Set Continuous Run Mode in CONTROL3 for PSoC3ES3 or PSoC5A */
 102:Generated_Source\PSoC5/Timer_1.c **** 
 103:Generated_Source\PSoC5/Timer_1.c ****         #endif /* Configure Run Mode with hardware enable */
 104:Generated_Source\PSoC5/Timer_1.c **** 
 105:Generated_Source\PSoC5/Timer_1.c ****         /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 106:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_RT1 &= ((uint8)(~Timer_1_RT1_MASK));
 107:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_RT1 |= Timer_1_SYNC;
 108:Generated_Source\PSoC5/Timer_1.c **** 
 109:Generated_Source\PSoC5/Timer_1.c ****         /*Enable DSI Sync all all inputs of the Timer*/
 110:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_RT1 &= ((uint8)(~Timer_1_SYNCDSI_MASK));
 111:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_RT1 |= Timer_1_SYNCDSI_EN;
 112:Generated_Source\PSoC5/Timer_1.c **** 
 113:Generated_Source\PSoC5/Timer_1.c ****         /* Set the IRQ to use the status register interrupts */
 114:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_CONTROL2 |= Timer_1_CTRL2_IRQ_SEL;
 115:Generated_Source\PSoC5/Timer_1.c ****     #endif /* Configuring registers of fixed function implementation */
 116:Generated_Source\PSoC5/Timer_1.c **** 
 117:Generated_Source\PSoC5/Timer_1.c ****     /* Set Initial values from Configuration */
 118:Generated_Source\PSoC5/Timer_1.c ****     Timer_1_WritePeriod(Timer_1_INIT_PERIOD);
 119:Generated_Source\PSoC5/Timer_1.c ****     Timer_1_WriteCounter(Timer_1_INIT_PERIOD);
 120:Generated_Source\PSoC5/Timer_1.c **** 
 121:Generated_Source\PSoC5/Timer_1.c ****     #if (Timer_1_UsingHWCaptureCounter)/* Capture counter is enabled */
 122:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_CAPTURE_COUNT_CTRL |= Timer_1_CNTR_ENABLE;
 123:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_SetCaptureCount(Timer_1_INIT_CAPTURE_COUNT);
 124:Generated_Source\PSoC5/Timer_1.c ****     #endif /* Configure capture counter value */
 125:Generated_Source\PSoC5/Timer_1.c **** 
 126:Generated_Source\PSoC5/Timer_1.c ****     #if (!Timer_1_UsingFixedFunction)
 127:Generated_Source\PSoC5/Timer_1.c ****         #if (Timer_1_SoftwareCaptureMode)
 128:Generated_Source\PSoC5/Timer_1.c ****             Timer_1_SetCaptureMode(Timer_1_INIT_CAPTURE_MODE);
 129:Generated_Source\PSoC5/Timer_1.c ****         #endif /* Set Capture Mode for UDB implementation if capture mode is software controlled */
 130:Generated_Source\PSoC5/Timer_1.c **** 
 131:Generated_Source\PSoC5/Timer_1.c ****         #if (Timer_1_SoftwareTriggerMode)
 132:Generated_Source\PSoC5/Timer_1.c ****             #if (!Timer_1_UDB_CONTROL_REG_REMOVED)
 133:Generated_Source\PSoC5/Timer_1.c ****                 if (0u == (Timer_1_CONTROL & Timer_1__B_TIMER__TM_SOFTWARE))
 134:Generated_Source\PSoC5/Timer_1.c ****                 {
 135:Generated_Source\PSoC5/Timer_1.c ****                     Timer_1_SetTriggerMode(Timer_1_INIT_TRIGGER_MODE);
 136:Generated_Source\PSoC5/Timer_1.c ****                 }
 137:Generated_Source\PSoC5/Timer_1.c ****             #endif /* (!Timer_1_UDB_CONTROL_REG_REMOVED) */
 138:Generated_Source\PSoC5/Timer_1.c ****         #endif /* Set trigger mode for UDB Implementation if trigger mode is software controlled */
 139:Generated_Source\PSoC5/Timer_1.c **** 
 140:Generated_Source\PSoC5/Timer_1.c ****         /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region critica
 141:Generated_Source\PSoC5/Timer_1.c ****         /* Enter Critical Region*/
 142:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_interruptState = CyEnterCriticalSection();
 143:Generated_Source\PSoC5/Timer_1.c **** 
 144:Generated_Source\PSoC5/Timer_1.c ****         /* Use the interrupt output of the status register for IRQ output */
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccvObFln.s 			page 4


 145:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_STATUS_AUX_CTRL |= Timer_1_STATUS_ACTL_INT_EN_MASK;
 146:Generated_Source\PSoC5/Timer_1.c **** 
 147:Generated_Source\PSoC5/Timer_1.c ****         /* Exit Critical Region*/
 148:Generated_Source\PSoC5/Timer_1.c ****         CyExitCriticalSection(Timer_1_interruptState);
 149:Generated_Source\PSoC5/Timer_1.c **** 
 150:Generated_Source\PSoC5/Timer_1.c ****         #if (Timer_1_EnableTriggerMode)
 151:Generated_Source\PSoC5/Timer_1.c ****             Timer_1_EnableTrigger();
 152:Generated_Source\PSoC5/Timer_1.c ****         #endif /* Set Trigger enable bit for UDB implementation in the control register*/
 153:Generated_Source\PSoC5/Timer_1.c **** 		
 154:Generated_Source\PSoC5/Timer_1.c **** 		
 155:Generated_Source\PSoC5/Timer_1.c ****         #if (Timer_1_InterruptOnCaptureCount && !Timer_1_UDB_CONTROL_REG_REMOVED)
 156:Generated_Source\PSoC5/Timer_1.c ****             Timer_1_SetInterruptCount(Timer_1_INIT_INT_CAPTURE_COUNT);
 157:Generated_Source\PSoC5/Timer_1.c ****         #endif /* Set interrupt count in UDB implementation if interrupt count feature is checked.*
 158:Generated_Source\PSoC5/Timer_1.c **** 
 159:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_ClearFIFO();
 160:Generated_Source\PSoC5/Timer_1.c ****     #endif /* Configure additional features of UDB implementation */
 161:Generated_Source\PSoC5/Timer_1.c **** 
 162:Generated_Source\PSoC5/Timer_1.c ****     Timer_1_SetInterruptMode(Timer_1_INIT_INTERRUPT_MODE);
 163:Generated_Source\PSoC5/Timer_1.c **** }
 164:Generated_Source\PSoC5/Timer_1.c **** 
 165:Generated_Source\PSoC5/Timer_1.c **** 
 166:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 167:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_Enable
 168:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 169:Generated_Source\PSoC5/Timer_1.c **** *
 170:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 171:Generated_Source\PSoC5/Timer_1.c **** *  Enable the Timer
 172:Generated_Source\PSoC5/Timer_1.c **** *
 173:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 174:Generated_Source\PSoC5/Timer_1.c **** *  void
 175:Generated_Source\PSoC5/Timer_1.c **** *
 176:Generated_Source\PSoC5/Timer_1.c **** * Return:
 177:Generated_Source\PSoC5/Timer_1.c **** *  void
 178:Generated_Source\PSoC5/Timer_1.c **** *
 179:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 180:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_Enable(void) 
 181:Generated_Source\PSoC5/Timer_1.c **** {
  28              		.loc 1 181 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 182:Generated_Source\PSoC5/Timer_1.c ****     /* Globally Enable the Fixed Function Block chosen */
 183:Generated_Source\PSoC5/Timer_1.c ****     #if (Timer_1_UsingFixedFunction)
 184:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_GLOBAL_ENABLE |= Timer_1_BLOCK_EN_MASK;
 185:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_GLOBAL_STBY_ENABLE |= Timer_1_BLOCK_STBY_EN_MASK;
 186:Generated_Source\PSoC5/Timer_1.c ****     #endif /* Set Enable bit for enabling Fixed function timer*/
 187:Generated_Source\PSoC5/Timer_1.c **** 
 188:Generated_Source\PSoC5/Timer_1.c ****     /* Remove assignment if control register is removed */
 189:Generated_Source\PSoC5/Timer_1.c ****     #if (!Timer_1_UDB_CONTROL_REG_REMOVED || Timer_1_UsingFixedFunction)
 190:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_CONTROL |= Timer_1_CTRL_ENABLE;
  33              		.loc 1 190 0
  34 0000 024A     		ldr	r2, .L2
  35 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  36 0004 43F08003 		orr	r3, r3, #128
  37 0008 1370     		strb	r3, [r2]
  38 000a 7047     		bx	lr
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccvObFln.s 			page 5


  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 000c 7D640040 		.word	1073767549
  43              		.cfi_endproc
  44              	.LFE1:
  45              		.size	Timer_1_Enable, .-Timer_1_Enable
  46              		.section	.text.Timer_1_Stop,"ax",%progbits
  47              		.align	2
  48              		.global	Timer_1_Stop
  49              		.thumb
  50              		.thumb_func
  51              		.type	Timer_1_Stop, %function
  52              	Timer_1_Stop:
  53              	.LFB3:
 191:Generated_Source\PSoC5/Timer_1.c ****     #endif /* Remove assignment if control register is removed */
 192:Generated_Source\PSoC5/Timer_1.c **** }
 193:Generated_Source\PSoC5/Timer_1.c **** 
 194:Generated_Source\PSoC5/Timer_1.c **** 
 195:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 196:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_Start
 197:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 198:Generated_Source\PSoC5/Timer_1.c **** *
 199:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 200:Generated_Source\PSoC5/Timer_1.c **** *  The start function initializes the timer with the default values, the
 201:Generated_Source\PSoC5/Timer_1.c **** *  enables the timerto begin counting.  It does not enable interrupts,
 202:Generated_Source\PSoC5/Timer_1.c **** *  the EnableInt command should be called if interrupt generation is required.
 203:Generated_Source\PSoC5/Timer_1.c **** *
 204:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 205:Generated_Source\PSoC5/Timer_1.c **** *  void
 206:Generated_Source\PSoC5/Timer_1.c **** *
 207:Generated_Source\PSoC5/Timer_1.c **** * Return:
 208:Generated_Source\PSoC5/Timer_1.c **** *  void
 209:Generated_Source\PSoC5/Timer_1.c **** *
 210:Generated_Source\PSoC5/Timer_1.c **** * Global variables:
 211:Generated_Source\PSoC5/Timer_1.c **** *  Timer_1_initVar: Is modified when this function is called for the
 212:Generated_Source\PSoC5/Timer_1.c **** *   first time. Is used to ensure that initialization happens only once.
 213:Generated_Source\PSoC5/Timer_1.c **** *
 214:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 215:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_Start(void) 
 216:Generated_Source\PSoC5/Timer_1.c **** {
 217:Generated_Source\PSoC5/Timer_1.c ****     if(Timer_1_initVar == 0u)
 218:Generated_Source\PSoC5/Timer_1.c ****     {
 219:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_Init();
 220:Generated_Source\PSoC5/Timer_1.c **** 
 221:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_initVar = 1u;   /* Clear this bit for Initialization */
 222:Generated_Source\PSoC5/Timer_1.c ****     }
 223:Generated_Source\PSoC5/Timer_1.c **** 
 224:Generated_Source\PSoC5/Timer_1.c ****     /* Enable the Timer */
 225:Generated_Source\PSoC5/Timer_1.c ****     Timer_1_Enable();
 226:Generated_Source\PSoC5/Timer_1.c **** }
 227:Generated_Source\PSoC5/Timer_1.c **** 
 228:Generated_Source\PSoC5/Timer_1.c **** 
 229:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 230:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_Stop
 231:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 232:Generated_Source\PSoC5/Timer_1.c **** *
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccvObFln.s 			page 6


 233:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 234:Generated_Source\PSoC5/Timer_1.c **** *  The stop function halts the timer, but does not change any modes or disable
 235:Generated_Source\PSoC5/Timer_1.c **** *  interrupts.
 236:Generated_Source\PSoC5/Timer_1.c **** *
 237:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 238:Generated_Source\PSoC5/Timer_1.c **** *  void
 239:Generated_Source\PSoC5/Timer_1.c **** *
 240:Generated_Source\PSoC5/Timer_1.c **** * Return:
 241:Generated_Source\PSoC5/Timer_1.c **** *  void
 242:Generated_Source\PSoC5/Timer_1.c **** *
 243:Generated_Source\PSoC5/Timer_1.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 244:Generated_Source\PSoC5/Timer_1.c **** *               has no effect on the operation of the timer.
 245:Generated_Source\PSoC5/Timer_1.c **** *
 246:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 247:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_Stop(void) 
 248:Generated_Source\PSoC5/Timer_1.c **** {
  54              		.loc 1 248 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
 249:Generated_Source\PSoC5/Timer_1.c ****     /* Disable Timer */
 250:Generated_Source\PSoC5/Timer_1.c ****     #if(!Timer_1_UDB_CONTROL_REG_REMOVED || Timer_1_UsingFixedFunction)
 251:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_CONTROL &= ((uint8)(~Timer_1_CTRL_ENABLE));
  59              		.loc 1 251 0
  60 0000 024A     		ldr	r2, .L5
  61 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  62 0004 03F07F03 		and	r3, r3, #127
  63 0008 1370     		strb	r3, [r2]
  64 000a 7047     		bx	lr
  65              	.L6:
  66              		.align	2
  67              	.L5:
  68 000c 7D640040 		.word	1073767549
  69              		.cfi_endproc
  70              	.LFE3:
  71              		.size	Timer_1_Stop, .-Timer_1_Stop
  72              		.section	.text.Timer_1_SetInterruptMode,"ax",%progbits
  73              		.align	2
  74              		.global	Timer_1_SetInterruptMode
  75              		.thumb
  76              		.thumb_func
  77              		.type	Timer_1_SetInterruptMode, %function
  78              	Timer_1_SetInterruptMode:
  79              	.LFB4:
 252:Generated_Source\PSoC5/Timer_1.c ****     #endif /* Remove assignment if control register is removed */
 253:Generated_Source\PSoC5/Timer_1.c **** 
 254:Generated_Source\PSoC5/Timer_1.c ****     /* Globally disable the Fixed Function Block chosen */
 255:Generated_Source\PSoC5/Timer_1.c ****     #if (Timer_1_UsingFixedFunction)
 256:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_GLOBAL_ENABLE &= ((uint8)(~Timer_1_BLOCK_EN_MASK));
 257:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_GLOBAL_STBY_ENABLE &= ((uint8)(~Timer_1_BLOCK_STBY_EN_MASK));
 258:Generated_Source\PSoC5/Timer_1.c ****     #endif /* Disable global enable for the Timer Fixed function block to stop the Timer*/
 259:Generated_Source\PSoC5/Timer_1.c **** }
 260:Generated_Source\PSoC5/Timer_1.c **** 
 261:Generated_Source\PSoC5/Timer_1.c **** 
 262:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 263:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_SetInterruptMode
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccvObFln.s 			page 7


 264:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 265:Generated_Source\PSoC5/Timer_1.c **** *
 266:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 267:Generated_Source\PSoC5/Timer_1.c **** *  This function selects which of the interrupt inputs may cause an interrupt.
 268:Generated_Source\PSoC5/Timer_1.c **** *  The twosources are caputure and terminal.  One, both or neither may
 269:Generated_Source\PSoC5/Timer_1.c **** *  be selected.
 270:Generated_Source\PSoC5/Timer_1.c **** *
 271:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 272:Generated_Source\PSoC5/Timer_1.c **** *  interruptMode:   This parameter is used to enable interrups on either/or
 273:Generated_Source\PSoC5/Timer_1.c **** *                   terminal count or capture.
 274:Generated_Source\PSoC5/Timer_1.c **** *
 275:Generated_Source\PSoC5/Timer_1.c **** * Return:
 276:Generated_Source\PSoC5/Timer_1.c **** *  void
 277:Generated_Source\PSoC5/Timer_1.c **** *
 278:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 279:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_SetInterruptMode(uint8 interruptMode) 
 280:Generated_Source\PSoC5/Timer_1.c **** {
  80              		.loc 1 280 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.LVL0:
 281:Generated_Source\PSoC5/Timer_1.c ****     Timer_1_STATUS_MASK = interruptMode;
  86              		.loc 1 281 0
  87 0000 014B     		ldr	r3, .L8
  88 0002 1870     		strb	r0, [r3]
  89 0004 7047     		bx	lr
  90              	.L9:
  91 0006 00BF     		.align	2
  92              	.L8:
  93 0008 8D640040 		.word	1073767565
  94              		.cfi_endproc
  95              	.LFE4:
  96              		.size	Timer_1_SetInterruptMode, .-Timer_1_SetInterruptMode
  97              		.section	.text.Timer_1_SoftwareCapture,"ax",%progbits
  98              		.align	2
  99              		.global	Timer_1_SoftwareCapture
 100              		.thumb
 101              		.thumb_func
 102              		.type	Timer_1_SoftwareCapture, %function
 103              	Timer_1_SoftwareCapture:
 104              	.LFB5:
 282:Generated_Source\PSoC5/Timer_1.c **** }
 283:Generated_Source\PSoC5/Timer_1.c **** 
 284:Generated_Source\PSoC5/Timer_1.c **** 
 285:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 286:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_SoftwareCapture
 287:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 288:Generated_Source\PSoC5/Timer_1.c **** *
 289:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 290:Generated_Source\PSoC5/Timer_1.c **** *  This function forces a capture independent of the capture signal.
 291:Generated_Source\PSoC5/Timer_1.c **** *
 292:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 293:Generated_Source\PSoC5/Timer_1.c **** *  void
 294:Generated_Source\PSoC5/Timer_1.c **** *
 295:Generated_Source\PSoC5/Timer_1.c **** * Return:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccvObFln.s 			page 8


 296:Generated_Source\PSoC5/Timer_1.c **** *  void
 297:Generated_Source\PSoC5/Timer_1.c **** *
 298:Generated_Source\PSoC5/Timer_1.c **** * Side Effects:
 299:Generated_Source\PSoC5/Timer_1.c **** *  An existing hardware capture could be overwritten.
 300:Generated_Source\PSoC5/Timer_1.c **** *
 301:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 302:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_SoftwareCapture(void) 
 303:Generated_Source\PSoC5/Timer_1.c **** {
 105              		.loc 1 303 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 304:Generated_Source\PSoC5/Timer_1.c ****     /* Generate a software capture by reading the counter register */
 305:Generated_Source\PSoC5/Timer_1.c ****     #if(Timer_1_UsingFixedFunction)
 306:Generated_Source\PSoC5/Timer_1.c ****         (void)CY_GET_REG16(Timer_1_COUNTER_LSB_PTR);
 307:Generated_Source\PSoC5/Timer_1.c ****     #else
 308:Generated_Source\PSoC5/Timer_1.c ****         (void)CY_GET_REG8(Timer_1_COUNTER_LSB_PTR_8BIT);
 110              		.loc 1 308 0
 111 0000 014B     		ldr	r3, .L11
 112 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 113 0004 7047     		bx	lr
 114              	.L12:
 115 0006 00BF     		.align	2
 116              	.L11:
 117 0008 0D640040 		.word	1073767437
 118              		.cfi_endproc
 119              	.LFE5:
 120              		.size	Timer_1_SoftwareCapture, .-Timer_1_SoftwareCapture
 121              		.section	.text.Timer_1_ReadStatusRegister,"ax",%progbits
 122              		.align	2
 123              		.global	Timer_1_ReadStatusRegister
 124              		.thumb
 125              		.thumb_func
 126              		.type	Timer_1_ReadStatusRegister, %function
 127              	Timer_1_ReadStatusRegister:
 128              	.LFB6:
 309:Generated_Source\PSoC5/Timer_1.c ****     #endif/* (Timer_1_UsingFixedFunction) */
 310:Generated_Source\PSoC5/Timer_1.c ****     /* Capture Data is now in the FIFO */
 311:Generated_Source\PSoC5/Timer_1.c **** }
 312:Generated_Source\PSoC5/Timer_1.c **** 
 313:Generated_Source\PSoC5/Timer_1.c **** 
 314:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 315:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_ReadStatusRegister
 316:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 317:Generated_Source\PSoC5/Timer_1.c **** *
 318:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 319:Generated_Source\PSoC5/Timer_1.c **** *  Reads the status register and returns it's state. This function should use
 320:Generated_Source\PSoC5/Timer_1.c **** *  defined types for the bit-field information as the bits in this register may
 321:Generated_Source\PSoC5/Timer_1.c **** *  be permuteable.
 322:Generated_Source\PSoC5/Timer_1.c **** *
 323:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 324:Generated_Source\PSoC5/Timer_1.c **** *  void
 325:Generated_Source\PSoC5/Timer_1.c **** *
 326:Generated_Source\PSoC5/Timer_1.c **** * Return:
 327:Generated_Source\PSoC5/Timer_1.c **** *  The contents of the status register
 328:Generated_Source\PSoC5/Timer_1.c **** *
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccvObFln.s 			page 9


 329:Generated_Source\PSoC5/Timer_1.c **** * Side Effects:
 330:Generated_Source\PSoC5/Timer_1.c **** *  Status register bits may be clear on read.
 331:Generated_Source\PSoC5/Timer_1.c **** *
 332:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 333:Generated_Source\PSoC5/Timer_1.c **** uint8   Timer_1_ReadStatusRegister(void) 
 334:Generated_Source\PSoC5/Timer_1.c **** {
 129              		.loc 1 334 0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 335:Generated_Source\PSoC5/Timer_1.c ****     return (Timer_1_STATUS);
 134              		.loc 1 335 0
 135 0000 014B     		ldr	r3, .L14
 136 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 336:Generated_Source\PSoC5/Timer_1.c **** }
 137              		.loc 1 336 0
 138 0004 7047     		bx	lr
 139              	.L15:
 140 0006 00BF     		.align	2
 141              	.L14:
 142 0008 6D640040 		.word	1073767533
 143              		.cfi_endproc
 144              	.LFE6:
 145              		.size	Timer_1_ReadStatusRegister, .-Timer_1_ReadStatusRegister
 146              		.section	.text.Timer_1_ReadControlRegister,"ax",%progbits
 147              		.align	2
 148              		.global	Timer_1_ReadControlRegister
 149              		.thumb
 150              		.thumb_func
 151              		.type	Timer_1_ReadControlRegister, %function
 152              	Timer_1_ReadControlRegister:
 153              	.LFB7:
 337:Generated_Source\PSoC5/Timer_1.c **** 
 338:Generated_Source\PSoC5/Timer_1.c **** 
 339:Generated_Source\PSoC5/Timer_1.c **** #if (!Timer_1_UDB_CONTROL_REG_REMOVED) /* Remove API if control register is unused */
 340:Generated_Source\PSoC5/Timer_1.c **** 
 341:Generated_Source\PSoC5/Timer_1.c **** 
 342:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 343:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_ReadControlRegister
 344:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 345:Generated_Source\PSoC5/Timer_1.c **** *
 346:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 347:Generated_Source\PSoC5/Timer_1.c **** *  Reads the control register and returns it's value.
 348:Generated_Source\PSoC5/Timer_1.c **** *
 349:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 350:Generated_Source\PSoC5/Timer_1.c **** *  void
 351:Generated_Source\PSoC5/Timer_1.c **** *
 352:Generated_Source\PSoC5/Timer_1.c **** * Return:
 353:Generated_Source\PSoC5/Timer_1.c **** *  The contents of the control register
 354:Generated_Source\PSoC5/Timer_1.c **** *
 355:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 356:Generated_Source\PSoC5/Timer_1.c **** uint8 Timer_1_ReadControlRegister(void) 
 357:Generated_Source\PSoC5/Timer_1.c **** {
 154              		.loc 1 357 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccvObFln.s 			page 10


 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
 358:Generated_Source\PSoC5/Timer_1.c ****     #if (!Timer_1_UDB_CONTROL_REG_REMOVED) 
 359:Generated_Source\PSoC5/Timer_1.c ****         return ((uint8)Timer_1_CONTROL);
 159              		.loc 1 359 0
 160 0000 014B     		ldr	r3, .L17
 161 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 360:Generated_Source\PSoC5/Timer_1.c ****     #else
 361:Generated_Source\PSoC5/Timer_1.c ****         return (0);
 362:Generated_Source\PSoC5/Timer_1.c ****     #endif /* (!Timer_1_UDB_CONTROL_REG_REMOVED) */
 363:Generated_Source\PSoC5/Timer_1.c **** }
 162              		.loc 1 363 0
 163 0004 7047     		bx	lr
 164              	.L18:
 165 0006 00BF     		.align	2
 166              	.L17:
 167 0008 7D640040 		.word	1073767549
 168              		.cfi_endproc
 169              	.LFE7:
 170              		.size	Timer_1_ReadControlRegister, .-Timer_1_ReadControlRegister
 171              		.section	.text.Timer_1_WriteControlRegister,"ax",%progbits
 172              		.align	2
 173              		.global	Timer_1_WriteControlRegister
 174              		.thumb
 175              		.thumb_func
 176              		.type	Timer_1_WriteControlRegister, %function
 177              	Timer_1_WriteControlRegister:
 178              	.LFB8:
 364:Generated_Source\PSoC5/Timer_1.c **** 
 365:Generated_Source\PSoC5/Timer_1.c **** 
 366:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 367:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_WriteControlRegister
 368:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 369:Generated_Source\PSoC5/Timer_1.c **** *
 370:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 371:Generated_Source\PSoC5/Timer_1.c **** *  Sets the bit-field of the control register.
 372:Generated_Source\PSoC5/Timer_1.c **** *
 373:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 374:Generated_Source\PSoC5/Timer_1.c **** *  control: The contents of the control register
 375:Generated_Source\PSoC5/Timer_1.c **** *
 376:Generated_Source\PSoC5/Timer_1.c **** * Return:
 377:Generated_Source\PSoC5/Timer_1.c **** *
 378:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 379:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_WriteControlRegister(uint8 control) 
 380:Generated_Source\PSoC5/Timer_1.c **** {
 179              		.loc 1 380 0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		@ link register save eliminated.
 184              	.LVL1:
 381:Generated_Source\PSoC5/Timer_1.c ****     #if (!Timer_1_UDB_CONTROL_REG_REMOVED) 
 382:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_CONTROL = control;
 185              		.loc 1 382 0
 186 0000 014B     		ldr	r3, .L20
 187 0002 1870     		strb	r0, [r3]
 188 0004 7047     		bx	lr
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccvObFln.s 			page 11


 189              	.L21:
 190 0006 00BF     		.align	2
 191              	.L20:
 192 0008 7D640040 		.word	1073767549
 193              		.cfi_endproc
 194              	.LFE8:
 195              		.size	Timer_1_WriteControlRegister, .-Timer_1_WriteControlRegister
 196              		.section	.text.Timer_1_ReadPeriod,"ax",%progbits
 197              		.align	2
 198              		.global	Timer_1_ReadPeriod
 199              		.thumb
 200              		.thumb_func
 201              		.type	Timer_1_ReadPeriod, %function
 202              	Timer_1_ReadPeriod:
 203              	.LFB9:
 383:Generated_Source\PSoC5/Timer_1.c ****     #else
 384:Generated_Source\PSoC5/Timer_1.c ****         control = 0u;
 385:Generated_Source\PSoC5/Timer_1.c ****     #endif /* (!Timer_1_UDB_CONTROL_REG_REMOVED) */
 386:Generated_Source\PSoC5/Timer_1.c **** }
 387:Generated_Source\PSoC5/Timer_1.c **** 
 388:Generated_Source\PSoC5/Timer_1.c **** #endif /* Remove API if control register is unused */
 389:Generated_Source\PSoC5/Timer_1.c **** 
 390:Generated_Source\PSoC5/Timer_1.c **** 
 391:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 392:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_ReadPeriod
 393:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 394:Generated_Source\PSoC5/Timer_1.c **** *
 395:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 396:Generated_Source\PSoC5/Timer_1.c **** *  This function returns the current value of the Period.
 397:Generated_Source\PSoC5/Timer_1.c **** *
 398:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 399:Generated_Source\PSoC5/Timer_1.c **** *  void
 400:Generated_Source\PSoC5/Timer_1.c **** *
 401:Generated_Source\PSoC5/Timer_1.c **** * Return:
 402:Generated_Source\PSoC5/Timer_1.c **** *  The present value of the counter.
 403:Generated_Source\PSoC5/Timer_1.c **** *
 404:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 405:Generated_Source\PSoC5/Timer_1.c **** uint8 Timer_1_ReadPeriod(void) 
 406:Generated_Source\PSoC5/Timer_1.c **** {
 204              		.loc 1 406 0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 407:Generated_Source\PSoC5/Timer_1.c ****    #if(Timer_1_UsingFixedFunction)
 408:Generated_Source\PSoC5/Timer_1.c ****        return ((uint8)CY_GET_REG16(Timer_1_PERIOD_LSB_PTR));
 409:Generated_Source\PSoC5/Timer_1.c ****    #else
 410:Generated_Source\PSoC5/Timer_1.c ****        return (CY_GET_REG8(Timer_1_PERIOD_LSB_PTR));
 209              		.loc 1 410 0
 210 0000 014B     		ldr	r3, .L23
 211 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 411:Generated_Source\PSoC5/Timer_1.c ****    #endif /* (Timer_1_UsingFixedFunction) */
 412:Generated_Source\PSoC5/Timer_1.c **** }
 212              		.loc 1 412 0
 213 0004 7047     		bx	lr
 214              	.L24:
 215 0006 00BF     		.align	2
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccvObFln.s 			page 12


 216              	.L23:
 217 0008 2D640040 		.word	1073767469
 218              		.cfi_endproc
 219              	.LFE9:
 220              		.size	Timer_1_ReadPeriod, .-Timer_1_ReadPeriod
 221              		.section	.text.Timer_1_WritePeriod,"ax",%progbits
 222              		.align	2
 223              		.global	Timer_1_WritePeriod
 224              		.thumb
 225              		.thumb_func
 226              		.type	Timer_1_WritePeriod, %function
 227              	Timer_1_WritePeriod:
 228              	.LFB10:
 413:Generated_Source\PSoC5/Timer_1.c **** 
 414:Generated_Source\PSoC5/Timer_1.c **** 
 415:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 416:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_WritePeriod
 417:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 418:Generated_Source\PSoC5/Timer_1.c **** *
 419:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 420:Generated_Source\PSoC5/Timer_1.c **** *  This function is used to change the period of the counter.  The new period
 421:Generated_Source\PSoC5/Timer_1.c **** *  will be loaded the next time terminal count is detected.
 422:Generated_Source\PSoC5/Timer_1.c **** *
 423:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 424:Generated_Source\PSoC5/Timer_1.c **** *  period: This value may be between 1 and (2^Resolution)-1.  A value of 0 will
 425:Generated_Source\PSoC5/Timer_1.c **** *          result in the counter remaining at zero.
 426:Generated_Source\PSoC5/Timer_1.c **** *
 427:Generated_Source\PSoC5/Timer_1.c **** * Return:
 428:Generated_Source\PSoC5/Timer_1.c **** *  void
 429:Generated_Source\PSoC5/Timer_1.c **** *
 430:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 431:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_WritePeriod(uint8 period) 
 432:Generated_Source\PSoC5/Timer_1.c **** {
 229              		.loc 1 432 0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 234              	.LVL2:
 433:Generated_Source\PSoC5/Timer_1.c ****     #if(Timer_1_UsingFixedFunction)
 434:Generated_Source\PSoC5/Timer_1.c ****         uint16 period_temp = (uint16)period;
 435:Generated_Source\PSoC5/Timer_1.c ****         CY_SET_REG16(Timer_1_PERIOD_LSB_PTR, period_temp);
 436:Generated_Source\PSoC5/Timer_1.c ****     #else
 437:Generated_Source\PSoC5/Timer_1.c ****         CY_SET_REG8(Timer_1_PERIOD_LSB_PTR, period);
 235              		.loc 1 437 0
 236 0000 014B     		ldr	r3, .L26
 237 0002 1870     		strb	r0, [r3]
 238 0004 7047     		bx	lr
 239              	.L27:
 240 0006 00BF     		.align	2
 241              	.L26:
 242 0008 2D640040 		.word	1073767469
 243              		.cfi_endproc
 244              	.LFE10:
 245              		.size	Timer_1_WritePeriod, .-Timer_1_WritePeriod
 246              		.section	.text.Timer_1_ReadCapture,"ax",%progbits
 247              		.align	2
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccvObFln.s 			page 13


 248              		.global	Timer_1_ReadCapture
 249              		.thumb
 250              		.thumb_func
 251              		.type	Timer_1_ReadCapture, %function
 252              	Timer_1_ReadCapture:
 253              	.LFB11:
 438:Generated_Source\PSoC5/Timer_1.c ****     #endif /*Write Period value with appropriate resolution suffix depending on UDB or fixed functi
 439:Generated_Source\PSoC5/Timer_1.c **** }
 440:Generated_Source\PSoC5/Timer_1.c **** 
 441:Generated_Source\PSoC5/Timer_1.c **** 
 442:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 443:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_ReadCapture
 444:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 445:Generated_Source\PSoC5/Timer_1.c **** *
 446:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 447:Generated_Source\PSoC5/Timer_1.c **** *  This function returns the last value captured.
 448:Generated_Source\PSoC5/Timer_1.c **** *
 449:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 450:Generated_Source\PSoC5/Timer_1.c **** *  void
 451:Generated_Source\PSoC5/Timer_1.c **** *
 452:Generated_Source\PSoC5/Timer_1.c **** * Return:
 453:Generated_Source\PSoC5/Timer_1.c **** *  Present Capture value.
 454:Generated_Source\PSoC5/Timer_1.c **** *
 455:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 456:Generated_Source\PSoC5/Timer_1.c **** uint8 Timer_1_ReadCapture(void) 
 457:Generated_Source\PSoC5/Timer_1.c **** {
 254              		.loc 1 457 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 458:Generated_Source\PSoC5/Timer_1.c ****    #if(Timer_1_UsingFixedFunction)
 459:Generated_Source\PSoC5/Timer_1.c ****        return ((uint8)CY_GET_REG16(Timer_1_CAPTURE_LSB_PTR));
 460:Generated_Source\PSoC5/Timer_1.c ****    #else
 461:Generated_Source\PSoC5/Timer_1.c ****        return (CY_GET_REG8(Timer_1_CAPTURE_LSB_PTR));
 259              		.loc 1 461 0
 260 0000 014B     		ldr	r3, .L29
 261 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 462:Generated_Source\PSoC5/Timer_1.c ****    #endif /* (Timer_1_UsingFixedFunction) */
 463:Generated_Source\PSoC5/Timer_1.c **** }
 262              		.loc 1 463 0
 263 0004 7047     		bx	lr
 264              	.L30:
 265 0006 00BF     		.align	2
 266              	.L29:
 267 0008 4D640040 		.word	1073767501
 268              		.cfi_endproc
 269              	.LFE11:
 270              		.size	Timer_1_ReadCapture, .-Timer_1_ReadCapture
 271              		.section	.text.Timer_1_WriteCounter,"ax",%progbits
 272              		.align	2
 273              		.global	Timer_1_WriteCounter
 274              		.thumb
 275              		.thumb_func
 276              		.type	Timer_1_WriteCounter, %function
 277              	Timer_1_WriteCounter:
 278              	.LFB12:
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccvObFln.s 			page 14


 464:Generated_Source\PSoC5/Timer_1.c **** 
 465:Generated_Source\PSoC5/Timer_1.c **** 
 466:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_WriteCounter
 468:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 469:Generated_Source\PSoC5/Timer_1.c **** *
 470:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 471:Generated_Source\PSoC5/Timer_1.c **** *  This funtion is used to set the counter to a specific value
 472:Generated_Source\PSoC5/Timer_1.c **** *
 473:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 474:Generated_Source\PSoC5/Timer_1.c **** *  counter:  New counter value.
 475:Generated_Source\PSoC5/Timer_1.c **** *
 476:Generated_Source\PSoC5/Timer_1.c **** * Return:
 477:Generated_Source\PSoC5/Timer_1.c **** *  void
 478:Generated_Source\PSoC5/Timer_1.c **** *
 479:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 480:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_WriteCounter(uint8 counter) 
 481:Generated_Source\PSoC5/Timer_1.c **** {
 279              		.loc 1 481 0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              		@ link register save eliminated.
 284              	.LVL3:
 482:Generated_Source\PSoC5/Timer_1.c ****    #if(Timer_1_UsingFixedFunction)
 483:Generated_Source\PSoC5/Timer_1.c ****         /* This functionality is removed until a FixedFunction HW update to
 484:Generated_Source\PSoC5/Timer_1.c ****          * allow this register to be written
 485:Generated_Source\PSoC5/Timer_1.c ****          */
 486:Generated_Source\PSoC5/Timer_1.c ****         CY_SET_REG16(Timer_1_COUNTER_LSB_PTR, (uint16)counter);
 487:Generated_Source\PSoC5/Timer_1.c ****         
 488:Generated_Source\PSoC5/Timer_1.c ****     #else
 489:Generated_Source\PSoC5/Timer_1.c ****         CY_SET_REG8(Timer_1_COUNTER_LSB_PTR, counter);
 285              		.loc 1 489 0
 286 0000 014B     		ldr	r3, .L32
 287 0002 1870     		strb	r0, [r3]
 288 0004 7047     		bx	lr
 289              	.L33:
 290 0006 00BF     		.align	2
 291              	.L32:
 292 0008 0D640040 		.word	1073767437
 293              		.cfi_endproc
 294              	.LFE12:
 295              		.size	Timer_1_WriteCounter, .-Timer_1_WriteCounter
 296              		.section	.text.Timer_1_ReadCounter,"ax",%progbits
 297              		.align	2
 298              		.global	Timer_1_ReadCounter
 299              		.thumb
 300              		.thumb_func
 301              		.type	Timer_1_ReadCounter, %function
 302              	Timer_1_ReadCounter:
 303              	.LFB13:
 490:Generated_Source\PSoC5/Timer_1.c ****     #endif /* Set Write Counter only for the UDB implementation (Write Counter not available in fix
 491:Generated_Source\PSoC5/Timer_1.c **** }
 492:Generated_Source\PSoC5/Timer_1.c **** 
 493:Generated_Source\PSoC5/Timer_1.c **** 
 494:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 495:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_ReadCounter
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccvObFln.s 			page 15


 496:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 497:Generated_Source\PSoC5/Timer_1.c **** *
 498:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 499:Generated_Source\PSoC5/Timer_1.c **** *  This function returns the current counter value.
 500:Generated_Source\PSoC5/Timer_1.c **** *
 501:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 502:Generated_Source\PSoC5/Timer_1.c **** *  void
 503:Generated_Source\PSoC5/Timer_1.c **** *
 504:Generated_Source\PSoC5/Timer_1.c **** * Return:
 505:Generated_Source\PSoC5/Timer_1.c **** *  Present compare value.
 506:Generated_Source\PSoC5/Timer_1.c **** *
 507:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 508:Generated_Source\PSoC5/Timer_1.c **** uint8 Timer_1_ReadCounter(void) 
 509:Generated_Source\PSoC5/Timer_1.c **** {
 304              		.loc 1 509 0
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 0
 307              		@ frame_needed = 0, uses_anonymous_args = 0
 308              		@ link register save eliminated.
 510:Generated_Source\PSoC5/Timer_1.c ****     /* Force capture by reading Accumulator */
 511:Generated_Source\PSoC5/Timer_1.c ****     /* Must first do a software capture to be able to read the counter */
 512:Generated_Source\PSoC5/Timer_1.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 513:Generated_Source\PSoC5/Timer_1.c ****     #if(Timer_1_UsingFixedFunction)
 514:Generated_Source\PSoC5/Timer_1.c ****         (void)CY_GET_REG16(Timer_1_COUNTER_LSB_PTR);
 515:Generated_Source\PSoC5/Timer_1.c ****     #else
 516:Generated_Source\PSoC5/Timer_1.c ****         (void)CY_GET_REG8(Timer_1_COUNTER_LSB_PTR_8BIT);
 309              		.loc 1 516 0
 310 0000 024B     		ldr	r3, .L35
 311 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 517:Generated_Source\PSoC5/Timer_1.c ****     #endif/* (Timer_1_UsingFixedFunction) */
 518:Generated_Source\PSoC5/Timer_1.c **** 
 519:Generated_Source\PSoC5/Timer_1.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 520:Generated_Source\PSoC5/Timer_1.c ****     #if(Timer_1_UsingFixedFunction)
 521:Generated_Source\PSoC5/Timer_1.c ****         return ((uint8)CY_GET_REG16(Timer_1_CAPTURE_LSB_PTR));
 522:Generated_Source\PSoC5/Timer_1.c ****     #else
 523:Generated_Source\PSoC5/Timer_1.c ****         return (CY_GET_REG8(Timer_1_CAPTURE_LSB_PTR));
 312              		.loc 1 523 0
 313 0004 024B     		ldr	r3, .L35+4
 314 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 524:Generated_Source\PSoC5/Timer_1.c ****     #endif /* (Timer_1_UsingFixedFunction) */
 525:Generated_Source\PSoC5/Timer_1.c **** }
 315              		.loc 1 525 0
 316 0008 7047     		bx	lr
 317              	.L36:
 318 000a 00BF     		.align	2
 319              	.L35:
 320 000c 0D640040 		.word	1073767437
 321 0010 4D640040 		.word	1073767501
 322              		.cfi_endproc
 323              	.LFE13:
 324              		.size	Timer_1_ReadCounter, .-Timer_1_ReadCounter
 325              		.section	.text.Timer_1_ClearFIFO,"ax",%progbits
 326              		.align	2
 327              		.global	Timer_1_ClearFIFO
 328              		.thumb
 329              		.thumb_func
 330              		.type	Timer_1_ClearFIFO, %function
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccvObFln.s 			page 16


 331              	Timer_1_ClearFIFO:
 332              	.LFB14:
 526:Generated_Source\PSoC5/Timer_1.c **** 
 527:Generated_Source\PSoC5/Timer_1.c **** 
 528:Generated_Source\PSoC5/Timer_1.c **** #if(!Timer_1_UsingFixedFunction) /* UDB Specific Functions */
 529:Generated_Source\PSoC5/Timer_1.c **** 
 530:Generated_Source\PSoC5/Timer_1.c ****     
 531:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 532:Generated_Source\PSoC5/Timer_1.c ****  * The functions below this point are only available using the UDB
 533:Generated_Source\PSoC5/Timer_1.c ****  * implementation.  If a feature is selected, then the API is enabled.
 534:Generated_Source\PSoC5/Timer_1.c ****  ******************************************************************************/
 535:Generated_Source\PSoC5/Timer_1.c **** 
 536:Generated_Source\PSoC5/Timer_1.c **** 
 537:Generated_Source\PSoC5/Timer_1.c **** #if (Timer_1_SoftwareCaptureMode)
 538:Generated_Source\PSoC5/Timer_1.c **** 
 539:Generated_Source\PSoC5/Timer_1.c **** 
 540:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 541:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_SetCaptureMode
 542:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 543:Generated_Source\PSoC5/Timer_1.c **** *
 544:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 545:Generated_Source\PSoC5/Timer_1.c **** *  This function sets the capture mode to either rising or falling edge.
 546:Generated_Source\PSoC5/Timer_1.c **** *
 547:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 548:Generated_Source\PSoC5/Timer_1.c **** *  captureMode: This parameter sets the capture mode of the UDB capture feature
 549:Generated_Source\PSoC5/Timer_1.c **** *  The parameter values are defined using the
 550:Generated_Source\PSoC5/Timer_1.c **** *  #define Timer_1__B_TIMER__CM_NONE 0
 551:Generated_Source\PSoC5/Timer_1.c **** #define Timer_1__B_TIMER__CM_RISINGEDGE 1
 552:Generated_Source\PSoC5/Timer_1.c **** #define Timer_1__B_TIMER__CM_FALLINGEDGE 2
 553:Generated_Source\PSoC5/Timer_1.c **** #define Timer_1__B_TIMER__CM_EITHEREDGE 3
 554:Generated_Source\PSoC5/Timer_1.c **** #define Timer_1__B_TIMER__CM_SOFTWARE 4
 555:Generated_Source\PSoC5/Timer_1.c ****  identifiers
 556:Generated_Source\PSoC5/Timer_1.c **** *  The following are the possible values of the parameter
 557:Generated_Source\PSoC5/Timer_1.c **** *  Timer_1__B_TIMER__CM_NONE        - Set Capture mode to None
 558:Generated_Source\PSoC5/Timer_1.c **** *  Timer_1__B_TIMER__CM_RISINGEDGE  - Rising edge of Capture input
 559:Generated_Source\PSoC5/Timer_1.c **** *  Timer_1__B_TIMER__CM_FALLINGEDGE - Falling edge of Capture input
 560:Generated_Source\PSoC5/Timer_1.c **** *  Timer_1__B_TIMER__CM_EITHEREDGE  - Either edge of Capture input
 561:Generated_Source\PSoC5/Timer_1.c **** *
 562:Generated_Source\PSoC5/Timer_1.c **** * Return:
 563:Generated_Source\PSoC5/Timer_1.c **** *  void
 564:Generated_Source\PSoC5/Timer_1.c **** *
 565:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 566:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_SetCaptureMode(uint8 captureMode) 
 567:Generated_Source\PSoC5/Timer_1.c **** {
 568:Generated_Source\PSoC5/Timer_1.c ****     /* This must only set to two bits of the control register associated */
 569:Generated_Source\PSoC5/Timer_1.c ****     captureMode = ((uint8)((uint8)captureMode << Timer_1_CTRL_CAP_MODE_SHIFT));
 570:Generated_Source\PSoC5/Timer_1.c ****     captureMode &= (Timer_1_CTRL_CAP_MODE_MASK);
 571:Generated_Source\PSoC5/Timer_1.c **** 
 572:Generated_Source\PSoC5/Timer_1.c ****     #if (!Timer_1_UDB_CONTROL_REG_REMOVED)
 573:Generated_Source\PSoC5/Timer_1.c ****         /* Clear the Current Setting */
 574:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_CONTROL &= ((uint8)(~Timer_1_CTRL_CAP_MODE_MASK));
 575:Generated_Source\PSoC5/Timer_1.c **** 
 576:Generated_Source\PSoC5/Timer_1.c ****         /* Write The New Setting */
 577:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_CONTROL |= captureMode;
 578:Generated_Source\PSoC5/Timer_1.c ****     #endif /* (!Timer_1_UDB_CONTROL_REG_REMOVED) */
 579:Generated_Source\PSoC5/Timer_1.c **** }
 580:Generated_Source\PSoC5/Timer_1.c **** #endif /* Remove API if Capture Mode is not Software Controlled */
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccvObFln.s 			page 17


 581:Generated_Source\PSoC5/Timer_1.c **** 
 582:Generated_Source\PSoC5/Timer_1.c **** 
 583:Generated_Source\PSoC5/Timer_1.c **** #if (Timer_1_SoftwareTriggerMode)
 584:Generated_Source\PSoC5/Timer_1.c **** 
 585:Generated_Source\PSoC5/Timer_1.c **** 
 586:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 587:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_SetTriggerMode
 588:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 589:Generated_Source\PSoC5/Timer_1.c **** *
 590:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 591:Generated_Source\PSoC5/Timer_1.c **** *  This function sets the trigger input mode
 592:Generated_Source\PSoC5/Timer_1.c **** *
 593:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 594:Generated_Source\PSoC5/Timer_1.c **** *  triggerMode: Pass one of the pre-defined Trigger Modes (except Software)
 595:Generated_Source\PSoC5/Timer_1.c ****     #define Timer_1__B_TIMER__TM_NONE 0x00u
 596:Generated_Source\PSoC5/Timer_1.c ****     #define Timer_1__B_TIMER__TM_RISINGEDGE 0x04u
 597:Generated_Source\PSoC5/Timer_1.c ****     #define Timer_1__B_TIMER__TM_FALLINGEDGE 0x08u
 598:Generated_Source\PSoC5/Timer_1.c ****     #define Timer_1__B_TIMER__TM_EITHEREDGE 0x0Cu
 599:Generated_Source\PSoC5/Timer_1.c ****     #define Timer_1__B_TIMER__TM_SOFTWARE 0x10u
 600:Generated_Source\PSoC5/Timer_1.c **** *
 601:Generated_Source\PSoC5/Timer_1.c **** * Return:
 602:Generated_Source\PSoC5/Timer_1.c **** *  void
 603:Generated_Source\PSoC5/Timer_1.c **** *
 604:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 605:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_SetTriggerMode(uint8 triggerMode) 
 606:Generated_Source\PSoC5/Timer_1.c **** {
 607:Generated_Source\PSoC5/Timer_1.c ****     /* This must only set to two bits of the control register associated */
 608:Generated_Source\PSoC5/Timer_1.c ****     triggerMode &= Timer_1_CTRL_TRIG_MODE_MASK;
 609:Generated_Source\PSoC5/Timer_1.c **** 
 610:Generated_Source\PSoC5/Timer_1.c ****     #if (!Timer_1_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed */
 611:Generated_Source\PSoC5/Timer_1.c ****     
 612:Generated_Source\PSoC5/Timer_1.c ****         /* Clear the Current Setting */
 613:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_CONTROL &= ((uint8)(~Timer_1_CTRL_TRIG_MODE_MASK));
 614:Generated_Source\PSoC5/Timer_1.c **** 
 615:Generated_Source\PSoC5/Timer_1.c ****         /* Write The New Setting */
 616:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_CONTROL |= (triggerMode | Timer_1__B_TIMER__TM_SOFTWARE);
 617:Generated_Source\PSoC5/Timer_1.c ****     #endif /* Remove code section if control register is not used */
 618:Generated_Source\PSoC5/Timer_1.c **** }
 619:Generated_Source\PSoC5/Timer_1.c **** #endif /* Remove API if Trigger Mode is not Software Controlled */
 620:Generated_Source\PSoC5/Timer_1.c **** 
 621:Generated_Source\PSoC5/Timer_1.c **** #if (Timer_1_EnableTriggerMode)
 622:Generated_Source\PSoC5/Timer_1.c **** 
 623:Generated_Source\PSoC5/Timer_1.c **** 
 624:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 625:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_EnableTrigger
 626:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 627:Generated_Source\PSoC5/Timer_1.c **** *
 628:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 629:Generated_Source\PSoC5/Timer_1.c **** *  Sets the control bit enabling Hardware Trigger mode
 630:Generated_Source\PSoC5/Timer_1.c **** *
 631:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 632:Generated_Source\PSoC5/Timer_1.c **** *  void
 633:Generated_Source\PSoC5/Timer_1.c **** *
 634:Generated_Source\PSoC5/Timer_1.c **** * Return:
 635:Generated_Source\PSoC5/Timer_1.c **** *  void
 636:Generated_Source\PSoC5/Timer_1.c **** *
 637:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccvObFln.s 			page 18


 638:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_EnableTrigger(void) 
 639:Generated_Source\PSoC5/Timer_1.c **** {
 640:Generated_Source\PSoC5/Timer_1.c ****     #if (!Timer_1_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed */
 641:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_CONTROL |= Timer_1_CTRL_TRIG_EN;
 642:Generated_Source\PSoC5/Timer_1.c ****     #endif /* Remove code section if control register is not used */
 643:Generated_Source\PSoC5/Timer_1.c **** }
 644:Generated_Source\PSoC5/Timer_1.c **** 
 645:Generated_Source\PSoC5/Timer_1.c **** 
 646:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 647:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_DisableTrigger
 648:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 649:Generated_Source\PSoC5/Timer_1.c **** *
 650:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 651:Generated_Source\PSoC5/Timer_1.c **** *  Clears the control bit enabling Hardware Trigger mode
 652:Generated_Source\PSoC5/Timer_1.c **** *
 653:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 654:Generated_Source\PSoC5/Timer_1.c **** *  void
 655:Generated_Source\PSoC5/Timer_1.c **** *
 656:Generated_Source\PSoC5/Timer_1.c **** * Return:
 657:Generated_Source\PSoC5/Timer_1.c **** *  void
 658:Generated_Source\PSoC5/Timer_1.c **** *
 659:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 660:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_DisableTrigger(void) 
 661:Generated_Source\PSoC5/Timer_1.c **** {
 662:Generated_Source\PSoC5/Timer_1.c ****     #if (!Timer_1_UDB_CONTROL_REG_REMOVED )   /* Remove assignment if control register is removed *
 663:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_CONTROL &= ((uint8)(~Timer_1_CTRL_TRIG_EN));
 664:Generated_Source\PSoC5/Timer_1.c ****     #endif /* Remove code section if control register is not used */
 665:Generated_Source\PSoC5/Timer_1.c **** }
 666:Generated_Source\PSoC5/Timer_1.c **** #endif /* Remove API is Trigger Mode is set to None */
 667:Generated_Source\PSoC5/Timer_1.c **** 
 668:Generated_Source\PSoC5/Timer_1.c **** #if(Timer_1_InterruptOnCaptureCount)
 669:Generated_Source\PSoC5/Timer_1.c **** 
 670:Generated_Source\PSoC5/Timer_1.c **** 
 671:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 672:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_SetInterruptCount
 673:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 674:Generated_Source\PSoC5/Timer_1.c **** *
 675:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 676:Generated_Source\PSoC5/Timer_1.c **** *  This function sets the capture count before an interrupt is triggered.
 677:Generated_Source\PSoC5/Timer_1.c **** *
 678:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 679:Generated_Source\PSoC5/Timer_1.c **** *  interruptCount:  A value between 0 and 3 is valid.  If the value is 0, then
 680:Generated_Source\PSoC5/Timer_1.c **** *                   an interrupt will occur each time a capture occurs.
 681:Generated_Source\PSoC5/Timer_1.c **** *                   A value of 1 to 3 will cause the interrupt
 682:Generated_Source\PSoC5/Timer_1.c **** *                   to delay by the same number of captures.
 683:Generated_Source\PSoC5/Timer_1.c **** *
 684:Generated_Source\PSoC5/Timer_1.c **** * Return:
 685:Generated_Source\PSoC5/Timer_1.c **** *  void
 686:Generated_Source\PSoC5/Timer_1.c **** *
 687:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 688:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_SetInterruptCount(uint8 interruptCount) 
 689:Generated_Source\PSoC5/Timer_1.c **** {
 690:Generated_Source\PSoC5/Timer_1.c ****     /* This must only set to two bits of the control register associated */
 691:Generated_Source\PSoC5/Timer_1.c ****     interruptCount &= Timer_1_CTRL_INTCNT_MASK;
 692:Generated_Source\PSoC5/Timer_1.c **** 
 693:Generated_Source\PSoC5/Timer_1.c ****     #if (!Timer_1_UDB_CONTROL_REG_REMOVED)
 694:Generated_Source\PSoC5/Timer_1.c ****         /* Clear the Current Setting */
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccvObFln.s 			page 19


 695:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_CONTROL &= ((uint8)(~Timer_1_CTRL_INTCNT_MASK));
 696:Generated_Source\PSoC5/Timer_1.c ****         /* Write The New Setting */
 697:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_CONTROL |= interruptCount;
 698:Generated_Source\PSoC5/Timer_1.c ****     #endif /* (!Timer_1_UDB_CONTROL_REG_REMOVED) */
 699:Generated_Source\PSoC5/Timer_1.c **** }
 700:Generated_Source\PSoC5/Timer_1.c **** #endif /* Timer_1_InterruptOnCaptureCount */
 701:Generated_Source\PSoC5/Timer_1.c **** 
 702:Generated_Source\PSoC5/Timer_1.c **** 
 703:Generated_Source\PSoC5/Timer_1.c **** #if (Timer_1_UsingHWCaptureCounter)
 704:Generated_Source\PSoC5/Timer_1.c **** 
 705:Generated_Source\PSoC5/Timer_1.c **** 
 706:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 707:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_SetCaptureCount
 708:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 709:Generated_Source\PSoC5/Timer_1.c **** *
 710:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 711:Generated_Source\PSoC5/Timer_1.c **** *  This function sets the capture count
 712:Generated_Source\PSoC5/Timer_1.c **** *
 713:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 714:Generated_Source\PSoC5/Timer_1.c **** *  captureCount: A value between 2 and 127 inclusive is valid.  A value of 1
 715:Generated_Source\PSoC5/Timer_1.c **** *                to 127 will cause the interrupt to delay by the same number of
 716:Generated_Source\PSoC5/Timer_1.c **** *                captures.
 717:Generated_Source\PSoC5/Timer_1.c **** *
 718:Generated_Source\PSoC5/Timer_1.c **** * Return:
 719:Generated_Source\PSoC5/Timer_1.c **** *  void
 720:Generated_Source\PSoC5/Timer_1.c **** *
 721:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 722:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_SetCaptureCount(uint8 captureCount) 
 723:Generated_Source\PSoC5/Timer_1.c **** {
 724:Generated_Source\PSoC5/Timer_1.c ****     Timer_1_CAP_COUNT = captureCount;
 725:Generated_Source\PSoC5/Timer_1.c **** }
 726:Generated_Source\PSoC5/Timer_1.c **** 
 727:Generated_Source\PSoC5/Timer_1.c **** 
 728:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 729:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_ReadCaptureCount
 730:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 731:Generated_Source\PSoC5/Timer_1.c **** *
 732:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 733:Generated_Source\PSoC5/Timer_1.c **** *  This function reads the capture count setting
 734:Generated_Source\PSoC5/Timer_1.c **** *
 735:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 736:Generated_Source\PSoC5/Timer_1.c **** *  void
 737:Generated_Source\PSoC5/Timer_1.c **** *
 738:Generated_Source\PSoC5/Timer_1.c **** * Return:
 739:Generated_Source\PSoC5/Timer_1.c **** *  Returns the Capture Count Setting
 740:Generated_Source\PSoC5/Timer_1.c **** *
 741:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 742:Generated_Source\PSoC5/Timer_1.c **** uint8 Timer_1_ReadCaptureCount(void) 
 743:Generated_Source\PSoC5/Timer_1.c **** {
 744:Generated_Source\PSoC5/Timer_1.c ****     return ((uint8)Timer_1_CAP_COUNT);
 745:Generated_Source\PSoC5/Timer_1.c **** }
 746:Generated_Source\PSoC5/Timer_1.c **** #endif /* Timer_1_UsingHWCaptureCounter */
 747:Generated_Source\PSoC5/Timer_1.c **** 
 748:Generated_Source\PSoC5/Timer_1.c **** 
 749:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 750:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_ClearFIFO
 751:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccvObFln.s 			page 20


 752:Generated_Source\PSoC5/Timer_1.c **** *
 753:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 754:Generated_Source\PSoC5/Timer_1.c **** *  This function clears all capture data from the capture FIFO
 755:Generated_Source\PSoC5/Timer_1.c **** *
 756:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 757:Generated_Source\PSoC5/Timer_1.c **** *  void
 758:Generated_Source\PSoC5/Timer_1.c **** *
 759:Generated_Source\PSoC5/Timer_1.c **** * Return:
 760:Generated_Source\PSoC5/Timer_1.c **** *  void
 761:Generated_Source\PSoC5/Timer_1.c **** *
 762:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 763:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_ClearFIFO(void) 
 764:Generated_Source\PSoC5/Timer_1.c **** {
 333              		.loc 1 764 0
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 0
 336              		@ frame_needed = 0, uses_anonymous_args = 0
 337 0000 08B5     		push	{r3, lr}
 338              		.cfi_def_cfa_offset 8
 339              		.cfi_offset 3, -8
 340              		.cfi_offset 14, -4
 765:Generated_Source\PSoC5/Timer_1.c ****     while(0u != (Timer_1_ReadStatusRegister() & Timer_1_STATUS_FIFONEMP))
 341              		.loc 1 765 0
 342 0002 01E0     		b	.L38
 343              	.L39:
 766:Generated_Source\PSoC5/Timer_1.c ****     {
 767:Generated_Source\PSoC5/Timer_1.c ****         (void)Timer_1_ReadCapture();
 344              		.loc 1 767 0
 345 0004 FFF7FEFF 		bl	Timer_1_ReadCapture
 346              	.LVL4:
 347              	.L38:
 765:Generated_Source\PSoC5/Timer_1.c ****     while(0u != (Timer_1_ReadStatusRegister() & Timer_1_STATUS_FIFONEMP))
 348              		.loc 1 765 0
 349 0008 FFF7FEFF 		bl	Timer_1_ReadStatusRegister
 350              	.LVL5:
 351 000c 10F0080F 		tst	r0, #8
 352 0010 F8D1     		bne	.L39
 768:Generated_Source\PSoC5/Timer_1.c ****     }
 769:Generated_Source\PSoC5/Timer_1.c **** }
 353              		.loc 1 769 0
 354 0012 08BD     		pop	{r3, pc}
 355              		.cfi_endproc
 356              	.LFE14:
 357              		.size	Timer_1_ClearFIFO, .-Timer_1_ClearFIFO
 358              		.section	.text.Timer_1_Init,"ax",%progbits
 359              		.align	2
 360              		.global	Timer_1_Init
 361              		.thumb
 362              		.thumb_func
 363              		.type	Timer_1_Init, %function
 364              	Timer_1_Init:
 365              	.LFB0:
  44:Generated_Source\PSoC5/Timer_1.c ****     #if(!Timer_1_UsingFixedFunction)
 366              		.loc 1 44 0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 0
 369              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccvObFln.s 			page 21


 370 0000 08B5     		push	{r3, lr}
 371              		.cfi_def_cfa_offset 8
 372              		.cfi_offset 3, -8
 373              		.cfi_offset 14, -4
 118:Generated_Source\PSoC5/Timer_1.c ****     Timer_1_WriteCounter(Timer_1_INIT_PERIOD);
 374              		.loc 1 118 0
 375 0002 6320     		movs	r0, #99
 376 0004 FFF7FEFF 		bl	Timer_1_WritePeriod
 377              	.LVL6:
 119:Generated_Source\PSoC5/Timer_1.c **** 
 378              		.loc 1 119 0
 379 0008 6320     		movs	r0, #99
 380 000a FFF7FEFF 		bl	Timer_1_WriteCounter
 381              	.LVL7:
 142:Generated_Source\PSoC5/Timer_1.c **** 
 382              		.loc 1 142 0
 383 000e FFF7FEFF 		bl	CyEnterCriticalSection
 384              	.LVL8:
 145:Generated_Source\PSoC5/Timer_1.c **** 
 385              		.loc 1 145 0
 386 0012 064A     		ldr	r2, .L43
 387 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 388 0016 43F01003 		orr	r3, r3, #16
 389 001a 1370     		strb	r3, [r2]
 148:Generated_Source\PSoC5/Timer_1.c **** 
 390              		.loc 1 148 0
 391 001c FFF7FEFF 		bl	CyExitCriticalSection
 392              	.LVL9:
 159:Generated_Source\PSoC5/Timer_1.c ****     #endif /* Configure additional features of UDB implementation */
 393              		.loc 1 159 0
 394 0020 FFF7FEFF 		bl	Timer_1_ClearFIFO
 395              	.LVL10:
 162:Generated_Source\PSoC5/Timer_1.c **** }
 396              		.loc 1 162 0
 397 0024 0020     		movs	r0, #0
 398 0026 FFF7FEFF 		bl	Timer_1_SetInterruptMode
 399              	.LVL11:
 400 002a 08BD     		pop	{r3, pc}
 401              	.L44:
 402              		.align	2
 403              	.L43:
 404 002c 9D640040 		.word	1073767581
 405              		.cfi_endproc
 406              	.LFE0:
 407              		.size	Timer_1_Init, .-Timer_1_Init
 408              		.section	.text.Timer_1_Start,"ax",%progbits
 409              		.align	2
 410              		.global	Timer_1_Start
 411              		.thumb
 412              		.thumb_func
 413              		.type	Timer_1_Start, %function
 414              	Timer_1_Start:
 415              	.LFB2:
 216:Generated_Source\PSoC5/Timer_1.c ****     if(Timer_1_initVar == 0u)
 416              		.loc 1 216 0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccvObFln.s 			page 22


 419              		@ frame_needed = 0, uses_anonymous_args = 0
 420 0000 08B5     		push	{r3, lr}
 421              		.cfi_def_cfa_offset 8
 422              		.cfi_offset 3, -8
 423              		.cfi_offset 14, -4
 217:Generated_Source\PSoC5/Timer_1.c ****     {
 424              		.loc 1 217 0
 425 0002 054B     		ldr	r3, .L48
 426 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 427 0006 23B9     		cbnz	r3, .L46
 219:Generated_Source\PSoC5/Timer_1.c **** 
 428              		.loc 1 219 0
 429 0008 FFF7FEFF 		bl	Timer_1_Init
 430              	.LVL12:
 221:Generated_Source\PSoC5/Timer_1.c ****     }
 431              		.loc 1 221 0
 432 000c 0122     		movs	r2, #1
 433 000e 024B     		ldr	r3, .L48
 434 0010 1A70     		strb	r2, [r3]
 435              	.L46:
 225:Generated_Source\PSoC5/Timer_1.c **** }
 436              		.loc 1 225 0
 437 0012 FFF7FEFF 		bl	Timer_1_Enable
 438              	.LVL13:
 439 0016 08BD     		pop	{r3, pc}
 440              	.L49:
 441              		.align	2
 442              	.L48:
 443 0018 00000000 		.word	.LANCHOR0
 444              		.cfi_endproc
 445              	.LFE2:
 446              		.size	Timer_1_Start, .-Timer_1_Start
 447              		.global	Timer_1_initVar
 448              		.bss
 449              		.set	.LANCHOR0,. + 0
 450              		.type	Timer_1_initVar, %object
 451              		.size	Timer_1_initVar, 1
 452              	Timer_1_initVar:
 453 0000 00       		.space	1
 454              		.text
 455              	.Letext0:
 456              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 457              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 458              		.section	.debug_info,"",%progbits
 459              	.Ldebug_info0:
 460 0000 CD020000 		.4byte	0x2cd
 461 0004 0400     		.2byte	0x4
 462 0006 00000000 		.4byte	.Ldebug_abbrev0
 463 000a 04       		.byte	0x4
 464 000b 01       		.uleb128 0x1
 465 000c A7000000 		.4byte	.LASF37
 466 0010 0C       		.byte	0xc
 467 0011 46000000 		.4byte	.LASF38
 468 0015 DD020000 		.4byte	.LASF39
 469 0019 00000000 		.4byte	.Ldebug_ranges0+0
 470 001d 00000000 		.4byte	0
 471 0021 00000000 		.4byte	.Ldebug_line0
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccvObFln.s 			page 23


 472 0025 02       		.uleb128 0x2
 473 0026 01       		.byte	0x1
 474 0027 06       		.byte	0x6
 475 0028 29030000 		.4byte	.LASF0
 476 002c 02       		.uleb128 0x2
 477 002d 01       		.byte	0x1
 478 002e 08       		.byte	0x8
 479 002f 99000000 		.4byte	.LASF1
 480 0033 02       		.uleb128 0x2
 481 0034 02       		.byte	0x2
 482 0035 05       		.byte	0x5
 483 0036 B8020000 		.4byte	.LASF2
 484 003a 02       		.uleb128 0x2
 485 003b 02       		.byte	0x2
 486 003c 07       		.byte	0x7
 487 003d 33000000 		.4byte	.LASF3
 488 0041 02       		.uleb128 0x2
 489 0042 04       		.byte	0x4
 490 0043 05       		.byte	0x5
 491 0044 0F030000 		.4byte	.LASF4
 492 0048 02       		.uleb128 0x2
 493 0049 04       		.byte	0x4
 494 004a 07       		.byte	0x7
 495 004b 4D010000 		.4byte	.LASF5
 496 004f 02       		.uleb128 0x2
 497 0050 08       		.byte	0x8
 498 0051 05       		.byte	0x5
 499 0052 5A020000 		.4byte	.LASF6
 500 0056 02       		.uleb128 0x2
 501 0057 08       		.byte	0x8
 502 0058 07       		.byte	0x7
 503 0059 82000000 		.4byte	.LASF7
 504 005d 03       		.uleb128 0x3
 505 005e 04       		.byte	0x4
 506 005f 05       		.byte	0x5
 507 0060 696E7400 		.ascii	"int\000"
 508 0064 02       		.uleb128 0x2
 509 0065 04       		.byte	0x4
 510 0066 07       		.byte	0x7
 511 0067 67000000 		.4byte	.LASF8
 512 006b 04       		.uleb128 0x4
 513 006c 5F010000 		.4byte	.LASF12
 514 0070 02       		.byte	0x2
 515 0071 E801     		.2byte	0x1e8
 516 0073 2C000000 		.4byte	0x2c
 517 0077 02       		.uleb128 0x2
 518 0078 04       		.byte	0x4
 519 0079 04       		.byte	0x4
 520 007a 74000000 		.4byte	.LASF9
 521 007e 02       		.uleb128 0x2
 522 007f 08       		.byte	0x8
 523 0080 04       		.byte	0x4
 524 0081 7C010000 		.4byte	.LASF10
 525 0085 02       		.uleb128 0x2
 526 0086 01       		.byte	0x1
 527 0087 08       		.byte	0x8
 528 0088 18030000 		.4byte	.LASF11
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccvObFln.s 			page 24


 529 008c 04       		.uleb128 0x4
 530 008d 35010000 		.4byte	.LASF13
 531 0091 02       		.byte	0x2
 532 0092 9202     		.2byte	0x292
 533 0094 98000000 		.4byte	0x98
 534 0098 05       		.uleb128 0x5
 535 0099 6B000000 		.4byte	0x6b
 536 009d 02       		.uleb128 0x2
 537 009e 08       		.byte	0x8
 538 009f 04       		.byte	0x4
 539 00a0 1D030000 		.4byte	.LASF14
 540 00a4 02       		.uleb128 0x2
 541 00a5 04       		.byte	0x4
 542 00a6 07       		.byte	0x7
 543 00a7 51020000 		.4byte	.LASF15
 544 00ab 06       		.uleb128 0x6
 545 00ac 6D010000 		.4byte	.LASF16
 546 00b0 01       		.byte	0x1
 547 00b1 B4       		.byte	0xb4
 548 00b2 00000000 		.4byte	.LFB1
 549 00b6 10000000 		.4byte	.LFE1-.LFB1
 550 00ba 01       		.uleb128 0x1
 551 00bb 9C       		.byte	0x9c
 552 00bc 06       		.uleb128 0x6
 553 00bd 35030000 		.4byte	.LASF17
 554 00c1 01       		.byte	0x1
 555 00c2 F7       		.byte	0xf7
 556 00c3 00000000 		.4byte	.LFB3
 557 00c7 10000000 		.4byte	.LFE3-.LFB3
 558 00cb 01       		.uleb128 0x1
 559 00cc 9C       		.byte	0x9c
 560 00cd 07       		.uleb128 0x7
 561 00ce 83010000 		.4byte	.LASF21
 562 00d2 01       		.byte	0x1
 563 00d3 1701     		.2byte	0x117
 564 00d5 00000000 		.4byte	.LFB4
 565 00d9 0C000000 		.4byte	.LFE4-.LFB4
 566 00dd 01       		.uleb128 0x1
 567 00de 9C       		.byte	0x9c
 568 00df F2000000 		.4byte	0xf2
 569 00e3 08       		.uleb128 0x8
 570 00e4 68020000 		.4byte	.LASF23
 571 00e8 01       		.byte	0x1
 572 00e9 1701     		.2byte	0x117
 573 00eb 6B000000 		.4byte	0x6b
 574 00ef 01       		.uleb128 0x1
 575 00f0 50       		.byte	0x50
 576 00f1 00       		.byte	0
 577 00f2 09       		.uleb128 0x9
 578 00f3 00000000 		.4byte	.LASF18
 579 00f7 01       		.byte	0x1
 580 00f8 2E01     		.2byte	0x12e
 581 00fa 00000000 		.4byte	.LFB5
 582 00fe 0C000000 		.4byte	.LFE5-.LFB5
 583 0102 01       		.uleb128 0x1
 584 0103 9C       		.byte	0x9c
 585 0104 0A       		.uleb128 0xa
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccvObFln.s 			page 25


 586 0105 C2020000 		.4byte	.LASF19
 587 0109 01       		.byte	0x1
 588 010a 4D01     		.2byte	0x14d
 589 010c 6B000000 		.4byte	0x6b
 590 0110 00000000 		.4byte	.LFB6
 591 0114 0C000000 		.4byte	.LFE6-.LFB6
 592 0118 01       		.uleb128 0x1
 593 0119 9C       		.byte	0x9c
 594 011a 0A       		.uleb128 0xa
 595 011b 9C020000 		.4byte	.LASF20
 596 011f 01       		.byte	0x1
 597 0120 6401     		.2byte	0x164
 598 0122 6B000000 		.4byte	0x6b
 599 0126 00000000 		.4byte	.LFB7
 600 012a 0C000000 		.4byte	.LFE7-.LFB7
 601 012e 01       		.uleb128 0x1
 602 012f 9C       		.byte	0x9c
 603 0130 07       		.uleb128 0x7
 604 0131 AC010000 		.4byte	.LASF22
 605 0135 01       		.byte	0x1
 606 0136 7B01     		.2byte	0x17b
 607 0138 00000000 		.4byte	.LFB8
 608 013c 0C000000 		.4byte	.LFE8-.LFB8
 609 0140 01       		.uleb128 0x1
 610 0141 9C       		.byte	0x9c
 611 0142 55010000 		.4byte	0x155
 612 0146 08       		.uleb128 0x8
 613 0147 65010000 		.4byte	.LASF24
 614 014b 01       		.byte	0x1
 615 014c 7B01     		.2byte	0x17b
 616 014e 6B000000 		.4byte	0x6b
 617 0152 01       		.uleb128 0x1
 618 0153 50       		.byte	0x50
 619 0154 00       		.byte	0
 620 0155 0A       		.uleb128 0xa
 621 0156 3A010000 		.4byte	.LASF25
 622 015a 01       		.byte	0x1
 623 015b 9501     		.2byte	0x195
 624 015d 6B000000 		.4byte	0x6b
 625 0161 00000000 		.4byte	.LFB9
 626 0165 0C000000 		.4byte	.LFE9-.LFB9
 627 0169 01       		.uleb128 0x1
 628 016a 9C       		.byte	0x9c
 629 016b 07       		.uleb128 0x7
 630 016c 18000000 		.4byte	.LASF26
 631 0170 01       		.byte	0x1
 632 0171 AF01     		.2byte	0x1af
 633 0173 00000000 		.4byte	.LFB10
 634 0177 0C000000 		.4byte	.LFE10-.LFB10
 635 017b 01       		.uleb128 0x1
 636 017c 9C       		.byte	0x9c
 637 017d 90010000 		.4byte	0x190
 638 0181 08       		.uleb128 0x8
 639 0182 2C000000 		.4byte	.LASF27
 640 0186 01       		.byte	0x1
 641 0187 AF01     		.2byte	0x1af
 642 0189 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccvObFln.s 			page 26


 643 018d 01       		.uleb128 0x1
 644 018e 50       		.byte	0x50
 645 018f 00       		.byte	0
 646 0190 0A       		.uleb128 0xa
 647 0191 26020000 		.4byte	.LASF28
 648 0195 01       		.byte	0x1
 649 0196 C801     		.2byte	0x1c8
 650 0198 6B000000 		.4byte	0x6b
 651 019c 00000000 		.4byte	.LFB11
 652 01a0 0C000000 		.4byte	.LFE11-.LFB11
 653 01a4 01       		.uleb128 0x1
 654 01a5 9C       		.byte	0x9c
 655 01a6 07       		.uleb128 0x7
 656 01a7 11020000 		.4byte	.LASF29
 657 01ab 01       		.byte	0x1
 658 01ac E001     		.2byte	0x1e0
 659 01ae 00000000 		.4byte	.LFB12
 660 01b2 0C000000 		.4byte	.LFE12-.LFB12
 661 01b6 01       		.uleb128 0x1
 662 01b7 9C       		.byte	0x9c
 663 01b8 CB010000 		.4byte	0x1cb
 664 01bc 08       		.uleb128 0x8
 665 01bd 7A000000 		.4byte	.LASF30
 666 01c1 01       		.byte	0x1
 667 01c2 E001     		.2byte	0x1e0
 668 01c4 6B000000 		.4byte	0x6b
 669 01c8 01       		.uleb128 0x1
 670 01c9 50       		.byte	0x50
 671 01ca 00       		.byte	0
 672 01cb 0A       		.uleb128 0xa
 673 01cc 76020000 		.4byte	.LASF31
 674 01d0 01       		.byte	0x1
 675 01d1 FC01     		.2byte	0x1fc
 676 01d3 6B000000 		.4byte	0x6b
 677 01d7 00000000 		.4byte	.LFB13
 678 01db 14000000 		.4byte	.LFE13-.LFB13
 679 01df 01       		.uleb128 0x1
 680 01e0 9C       		.byte	0x9c
 681 01e1 07       		.uleb128 0x7
 682 01e2 8A020000 		.4byte	.LASF32
 683 01e6 01       		.byte	0x1
 684 01e7 FB02     		.2byte	0x2fb
 685 01e9 00000000 		.4byte	.LFB14
 686 01ed 14000000 		.4byte	.LFE14-.LFB14
 687 01f1 01       		.uleb128 0x1
 688 01f2 9C       		.byte	0x9c
 689 01f3 0A020000 		.4byte	0x20a
 690 01f7 0B       		.uleb128 0xb
 691 01f8 08000000 		.4byte	.LVL4
 692 01fc 90010000 		.4byte	0x190
 693 0200 0B       		.uleb128 0xb
 694 0201 0C000000 		.4byte	.LVL5
 695 0205 04010000 		.4byte	0x104
 696 0209 00       		.byte	0
 697 020a 0C       		.uleb128 0xc
 698 020b EE010000 		.4byte	.LASF33
 699 020f 01       		.byte	0x1
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccvObFln.s 			page 27


 700 0210 2B       		.byte	0x2b
 701 0211 00000000 		.4byte	.LFB0
 702 0215 30000000 		.4byte	.LFE0-.LFB0
 703 0219 01       		.uleb128 0x1
 704 021a 9C       		.byte	0x9c
 705 021b 81020000 		.4byte	0x281
 706 021f 0D       		.uleb128 0xd
 707 0220 3A020000 		.4byte	.LASF40
 708 0224 01       		.byte	0x1
 709 0225 2F       		.byte	0x2f
 710 0226 6B000000 		.4byte	0x6b
 711 022a 00000000 		.4byte	.LLST0
 712 022e 0E       		.uleb128 0xe
 713 022f 08000000 		.4byte	.LVL6
 714 0233 6B010000 		.4byte	0x16b
 715 0237 42020000 		.4byte	0x242
 716 023b 0F       		.uleb128 0xf
 717 023c 01       		.uleb128 0x1
 718 023d 50       		.byte	0x50
 719 023e 02       		.uleb128 0x2
 720 023f 08       		.byte	0x8
 721 0240 63       		.byte	0x63
 722 0241 00       		.byte	0
 723 0242 0E       		.uleb128 0xe
 724 0243 0E000000 		.4byte	.LVL7
 725 0247 A6010000 		.4byte	0x1a6
 726 024b 56020000 		.4byte	0x256
 727 024f 0F       		.uleb128 0xf
 728 0250 01       		.uleb128 0x1
 729 0251 50       		.byte	0x50
 730 0252 02       		.uleb128 0x2
 731 0253 08       		.byte	0x8
 732 0254 63       		.byte	0x63
 733 0255 00       		.byte	0
 734 0256 0B       		.uleb128 0xb
 735 0257 12000000 		.4byte	.LVL8
 736 025b BA020000 		.4byte	0x2ba
 737 025f 0B       		.uleb128 0xb
 738 0260 20000000 		.4byte	.LVL9
 739 0264 C5020000 		.4byte	0x2c5
 740 0268 0B       		.uleb128 0xb
 741 0269 24000000 		.4byte	.LVL10
 742 026d E1010000 		.4byte	0x1e1
 743 0271 10       		.uleb128 0x10
 744 0272 2A000000 		.4byte	.LVL11
 745 0276 CD000000 		.4byte	0xcd
 746 027a 0F       		.uleb128 0xf
 747 027b 01       		.uleb128 0x1
 748 027c 50       		.byte	0x50
 749 027d 01       		.uleb128 0x1
 750 027e 30       		.byte	0x30
 751 027f 00       		.byte	0
 752 0280 00       		.byte	0
 753 0281 0C       		.uleb128 0xc
 754 0282 E0010000 		.4byte	.LASF34
 755 0286 01       		.byte	0x1
 756 0287 D7       		.byte	0xd7
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccvObFln.s 			page 28


 757 0288 00000000 		.4byte	.LFB2
 758 028c 1C000000 		.4byte	.LFE2-.LFB2
 759 0290 01       		.uleb128 0x1
 760 0291 9C       		.byte	0x9c
 761 0292 A9020000 		.4byte	0x2a9
 762 0296 0B       		.uleb128 0xb
 763 0297 0C000000 		.4byte	.LVL12
 764 029b 0A020000 		.4byte	0x20a
 765 029f 0B       		.uleb128 0xb
 766 02a0 16000000 		.4byte	.LVL13
 767 02a4 AB000000 		.4byte	0xab
 768 02a8 00       		.byte	0
 769 02a9 11       		.uleb128 0x11
 770 02aa 9C010000 		.4byte	.LASF41
 771 02ae 01       		.byte	0x1
 772 02af 1A       		.byte	0x1a
 773 02b0 6B000000 		.4byte	0x6b
 774 02b4 05       		.uleb128 0x5
 775 02b5 03       		.byte	0x3
 776 02b6 00000000 		.4byte	Timer_1_initVar
 777 02ba 12       		.uleb128 0x12
 778 02bb C9010000 		.4byte	.LASF35
 779 02bf C9010000 		.4byte	.LASF35
 780 02c3 03       		.byte	0x3
 781 02c4 7D       		.byte	0x7d
 782 02c5 12       		.uleb128 0x12
 783 02c6 FB010000 		.4byte	.LASF36
 784 02ca FB010000 		.4byte	.LASF36
 785 02ce 03       		.byte	0x3
 786 02cf 7E       		.byte	0x7e
 787 02d0 00       		.byte	0
 788              		.section	.debug_abbrev,"",%progbits
 789              	.Ldebug_abbrev0:
 790 0000 01       		.uleb128 0x1
 791 0001 11       		.uleb128 0x11
 792 0002 01       		.byte	0x1
 793 0003 25       		.uleb128 0x25
 794 0004 0E       		.uleb128 0xe
 795 0005 13       		.uleb128 0x13
 796 0006 0B       		.uleb128 0xb
 797 0007 03       		.uleb128 0x3
 798 0008 0E       		.uleb128 0xe
 799 0009 1B       		.uleb128 0x1b
 800 000a 0E       		.uleb128 0xe
 801 000b 55       		.uleb128 0x55
 802 000c 17       		.uleb128 0x17
 803 000d 11       		.uleb128 0x11
 804 000e 01       		.uleb128 0x1
 805 000f 10       		.uleb128 0x10
 806 0010 17       		.uleb128 0x17
 807 0011 00       		.byte	0
 808 0012 00       		.byte	0
 809 0013 02       		.uleb128 0x2
 810 0014 24       		.uleb128 0x24
 811 0015 00       		.byte	0
 812 0016 0B       		.uleb128 0xb
 813 0017 0B       		.uleb128 0xb
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccvObFln.s 			page 29


 814 0018 3E       		.uleb128 0x3e
 815 0019 0B       		.uleb128 0xb
 816 001a 03       		.uleb128 0x3
 817 001b 0E       		.uleb128 0xe
 818 001c 00       		.byte	0
 819 001d 00       		.byte	0
 820 001e 03       		.uleb128 0x3
 821 001f 24       		.uleb128 0x24
 822 0020 00       		.byte	0
 823 0021 0B       		.uleb128 0xb
 824 0022 0B       		.uleb128 0xb
 825 0023 3E       		.uleb128 0x3e
 826 0024 0B       		.uleb128 0xb
 827 0025 03       		.uleb128 0x3
 828 0026 08       		.uleb128 0x8
 829 0027 00       		.byte	0
 830 0028 00       		.byte	0
 831 0029 04       		.uleb128 0x4
 832 002a 16       		.uleb128 0x16
 833 002b 00       		.byte	0
 834 002c 03       		.uleb128 0x3
 835 002d 0E       		.uleb128 0xe
 836 002e 3A       		.uleb128 0x3a
 837 002f 0B       		.uleb128 0xb
 838 0030 3B       		.uleb128 0x3b
 839 0031 05       		.uleb128 0x5
 840 0032 49       		.uleb128 0x49
 841 0033 13       		.uleb128 0x13
 842 0034 00       		.byte	0
 843 0035 00       		.byte	0
 844 0036 05       		.uleb128 0x5
 845 0037 35       		.uleb128 0x35
 846 0038 00       		.byte	0
 847 0039 49       		.uleb128 0x49
 848 003a 13       		.uleb128 0x13
 849 003b 00       		.byte	0
 850 003c 00       		.byte	0
 851 003d 06       		.uleb128 0x6
 852 003e 2E       		.uleb128 0x2e
 853 003f 00       		.byte	0
 854 0040 3F       		.uleb128 0x3f
 855 0041 19       		.uleb128 0x19
 856 0042 03       		.uleb128 0x3
 857 0043 0E       		.uleb128 0xe
 858 0044 3A       		.uleb128 0x3a
 859 0045 0B       		.uleb128 0xb
 860 0046 3B       		.uleb128 0x3b
 861 0047 0B       		.uleb128 0xb
 862 0048 27       		.uleb128 0x27
 863 0049 19       		.uleb128 0x19
 864 004a 11       		.uleb128 0x11
 865 004b 01       		.uleb128 0x1
 866 004c 12       		.uleb128 0x12
 867 004d 06       		.uleb128 0x6
 868 004e 40       		.uleb128 0x40
 869 004f 18       		.uleb128 0x18
 870 0050 9742     		.uleb128 0x2117
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccvObFln.s 			page 30


 871 0052 19       		.uleb128 0x19
 872 0053 00       		.byte	0
 873 0054 00       		.byte	0
 874 0055 07       		.uleb128 0x7
 875 0056 2E       		.uleb128 0x2e
 876 0057 01       		.byte	0x1
 877 0058 3F       		.uleb128 0x3f
 878 0059 19       		.uleb128 0x19
 879 005a 03       		.uleb128 0x3
 880 005b 0E       		.uleb128 0xe
 881 005c 3A       		.uleb128 0x3a
 882 005d 0B       		.uleb128 0xb
 883 005e 3B       		.uleb128 0x3b
 884 005f 05       		.uleb128 0x5
 885 0060 27       		.uleb128 0x27
 886 0061 19       		.uleb128 0x19
 887 0062 11       		.uleb128 0x11
 888 0063 01       		.uleb128 0x1
 889 0064 12       		.uleb128 0x12
 890 0065 06       		.uleb128 0x6
 891 0066 40       		.uleb128 0x40
 892 0067 18       		.uleb128 0x18
 893 0068 9742     		.uleb128 0x2117
 894 006a 19       		.uleb128 0x19
 895 006b 01       		.uleb128 0x1
 896 006c 13       		.uleb128 0x13
 897 006d 00       		.byte	0
 898 006e 00       		.byte	0
 899 006f 08       		.uleb128 0x8
 900 0070 05       		.uleb128 0x5
 901 0071 00       		.byte	0
 902 0072 03       		.uleb128 0x3
 903 0073 0E       		.uleb128 0xe
 904 0074 3A       		.uleb128 0x3a
 905 0075 0B       		.uleb128 0xb
 906 0076 3B       		.uleb128 0x3b
 907 0077 05       		.uleb128 0x5
 908 0078 49       		.uleb128 0x49
 909 0079 13       		.uleb128 0x13
 910 007a 02       		.uleb128 0x2
 911 007b 18       		.uleb128 0x18
 912 007c 00       		.byte	0
 913 007d 00       		.byte	0
 914 007e 09       		.uleb128 0x9
 915 007f 2E       		.uleb128 0x2e
 916 0080 00       		.byte	0
 917 0081 3F       		.uleb128 0x3f
 918 0082 19       		.uleb128 0x19
 919 0083 03       		.uleb128 0x3
 920 0084 0E       		.uleb128 0xe
 921 0085 3A       		.uleb128 0x3a
 922 0086 0B       		.uleb128 0xb
 923 0087 3B       		.uleb128 0x3b
 924 0088 05       		.uleb128 0x5
 925 0089 27       		.uleb128 0x27
 926 008a 19       		.uleb128 0x19
 927 008b 11       		.uleb128 0x11
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccvObFln.s 			page 31


 928 008c 01       		.uleb128 0x1
 929 008d 12       		.uleb128 0x12
 930 008e 06       		.uleb128 0x6
 931 008f 40       		.uleb128 0x40
 932 0090 18       		.uleb128 0x18
 933 0091 9742     		.uleb128 0x2117
 934 0093 19       		.uleb128 0x19
 935 0094 00       		.byte	0
 936 0095 00       		.byte	0
 937 0096 0A       		.uleb128 0xa
 938 0097 2E       		.uleb128 0x2e
 939 0098 00       		.byte	0
 940 0099 3F       		.uleb128 0x3f
 941 009a 19       		.uleb128 0x19
 942 009b 03       		.uleb128 0x3
 943 009c 0E       		.uleb128 0xe
 944 009d 3A       		.uleb128 0x3a
 945 009e 0B       		.uleb128 0xb
 946 009f 3B       		.uleb128 0x3b
 947 00a0 05       		.uleb128 0x5
 948 00a1 27       		.uleb128 0x27
 949 00a2 19       		.uleb128 0x19
 950 00a3 49       		.uleb128 0x49
 951 00a4 13       		.uleb128 0x13
 952 00a5 11       		.uleb128 0x11
 953 00a6 01       		.uleb128 0x1
 954 00a7 12       		.uleb128 0x12
 955 00a8 06       		.uleb128 0x6
 956 00a9 40       		.uleb128 0x40
 957 00aa 18       		.uleb128 0x18
 958 00ab 9742     		.uleb128 0x2117
 959 00ad 19       		.uleb128 0x19
 960 00ae 00       		.byte	0
 961 00af 00       		.byte	0
 962 00b0 0B       		.uleb128 0xb
 963 00b1 898201   		.uleb128 0x4109
 964 00b4 00       		.byte	0
 965 00b5 11       		.uleb128 0x11
 966 00b6 01       		.uleb128 0x1
 967 00b7 31       		.uleb128 0x31
 968 00b8 13       		.uleb128 0x13
 969 00b9 00       		.byte	0
 970 00ba 00       		.byte	0
 971 00bb 0C       		.uleb128 0xc
 972 00bc 2E       		.uleb128 0x2e
 973 00bd 01       		.byte	0x1
 974 00be 3F       		.uleb128 0x3f
 975 00bf 19       		.uleb128 0x19
 976 00c0 03       		.uleb128 0x3
 977 00c1 0E       		.uleb128 0xe
 978 00c2 3A       		.uleb128 0x3a
 979 00c3 0B       		.uleb128 0xb
 980 00c4 3B       		.uleb128 0x3b
 981 00c5 0B       		.uleb128 0xb
 982 00c6 27       		.uleb128 0x27
 983 00c7 19       		.uleb128 0x19
 984 00c8 11       		.uleb128 0x11
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccvObFln.s 			page 32


 985 00c9 01       		.uleb128 0x1
 986 00ca 12       		.uleb128 0x12
 987 00cb 06       		.uleb128 0x6
 988 00cc 40       		.uleb128 0x40
 989 00cd 18       		.uleb128 0x18
 990 00ce 9742     		.uleb128 0x2117
 991 00d0 19       		.uleb128 0x19
 992 00d1 01       		.uleb128 0x1
 993 00d2 13       		.uleb128 0x13
 994 00d3 00       		.byte	0
 995 00d4 00       		.byte	0
 996 00d5 0D       		.uleb128 0xd
 997 00d6 34       		.uleb128 0x34
 998 00d7 00       		.byte	0
 999 00d8 03       		.uleb128 0x3
 1000 00d9 0E       		.uleb128 0xe
 1001 00da 3A       		.uleb128 0x3a
 1002 00db 0B       		.uleb128 0xb
 1003 00dc 3B       		.uleb128 0x3b
 1004 00dd 0B       		.uleb128 0xb
 1005 00de 49       		.uleb128 0x49
 1006 00df 13       		.uleb128 0x13
 1007 00e0 02       		.uleb128 0x2
 1008 00e1 17       		.uleb128 0x17
 1009 00e2 00       		.byte	0
 1010 00e3 00       		.byte	0
 1011 00e4 0E       		.uleb128 0xe
 1012 00e5 898201   		.uleb128 0x4109
 1013 00e8 01       		.byte	0x1
 1014 00e9 11       		.uleb128 0x11
 1015 00ea 01       		.uleb128 0x1
 1016 00eb 31       		.uleb128 0x31
 1017 00ec 13       		.uleb128 0x13
 1018 00ed 01       		.uleb128 0x1
 1019 00ee 13       		.uleb128 0x13
 1020 00ef 00       		.byte	0
 1021 00f0 00       		.byte	0
 1022 00f1 0F       		.uleb128 0xf
 1023 00f2 8A8201   		.uleb128 0x410a
 1024 00f5 00       		.byte	0
 1025 00f6 02       		.uleb128 0x2
 1026 00f7 18       		.uleb128 0x18
 1027 00f8 9142     		.uleb128 0x2111
 1028 00fa 18       		.uleb128 0x18
 1029 00fb 00       		.byte	0
 1030 00fc 00       		.byte	0
 1031 00fd 10       		.uleb128 0x10
 1032 00fe 898201   		.uleb128 0x4109
 1033 0101 01       		.byte	0x1
 1034 0102 11       		.uleb128 0x11
 1035 0103 01       		.uleb128 0x1
 1036 0104 31       		.uleb128 0x31
 1037 0105 13       		.uleb128 0x13
 1038 0106 00       		.byte	0
 1039 0107 00       		.byte	0
 1040 0108 11       		.uleb128 0x11
 1041 0109 34       		.uleb128 0x34
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccvObFln.s 			page 33


 1042 010a 00       		.byte	0
 1043 010b 03       		.uleb128 0x3
 1044 010c 0E       		.uleb128 0xe
 1045 010d 3A       		.uleb128 0x3a
 1046 010e 0B       		.uleb128 0xb
 1047 010f 3B       		.uleb128 0x3b
 1048 0110 0B       		.uleb128 0xb
 1049 0111 49       		.uleb128 0x49
 1050 0112 13       		.uleb128 0x13
 1051 0113 3F       		.uleb128 0x3f
 1052 0114 19       		.uleb128 0x19
 1053 0115 02       		.uleb128 0x2
 1054 0116 18       		.uleb128 0x18
 1055 0117 00       		.byte	0
 1056 0118 00       		.byte	0
 1057 0119 12       		.uleb128 0x12
 1058 011a 2E       		.uleb128 0x2e
 1059 011b 00       		.byte	0
 1060 011c 3F       		.uleb128 0x3f
 1061 011d 19       		.uleb128 0x19
 1062 011e 3C       		.uleb128 0x3c
 1063 011f 19       		.uleb128 0x19
 1064 0120 6E       		.uleb128 0x6e
 1065 0121 0E       		.uleb128 0xe
 1066 0122 03       		.uleb128 0x3
 1067 0123 0E       		.uleb128 0xe
 1068 0124 3A       		.uleb128 0x3a
 1069 0125 0B       		.uleb128 0xb
 1070 0126 3B       		.uleb128 0x3b
 1071 0127 0B       		.uleb128 0xb
 1072 0128 00       		.byte	0
 1073 0129 00       		.byte	0
 1074 012a 00       		.byte	0
 1075              		.section	.debug_loc,"",%progbits
 1076              	.Ldebug_loc0:
 1077              	.LLST0:
 1078 0000 12000000 		.4byte	.LVL8
 1079 0004 1F000000 		.4byte	.LVL9-1
 1080 0008 0100     		.2byte	0x1
 1081 000a 50       		.byte	0x50
 1082 000b 00000000 		.4byte	0
 1083 000f 00000000 		.4byte	0
 1084              		.section	.debug_aranges,"",%progbits
 1085 0000 8C000000 		.4byte	0x8c
 1086 0004 0200     		.2byte	0x2
 1087 0006 00000000 		.4byte	.Ldebug_info0
 1088 000a 04       		.byte	0x4
 1089 000b 00       		.byte	0
 1090 000c 0000     		.2byte	0
 1091 000e 0000     		.2byte	0
 1092 0010 00000000 		.4byte	.LFB1
 1093 0014 10000000 		.4byte	.LFE1-.LFB1
 1094 0018 00000000 		.4byte	.LFB3
 1095 001c 10000000 		.4byte	.LFE3-.LFB3
 1096 0020 00000000 		.4byte	.LFB4
 1097 0024 0C000000 		.4byte	.LFE4-.LFB4
 1098 0028 00000000 		.4byte	.LFB5
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccvObFln.s 			page 34


 1099 002c 0C000000 		.4byte	.LFE5-.LFB5
 1100 0030 00000000 		.4byte	.LFB6
 1101 0034 0C000000 		.4byte	.LFE6-.LFB6
 1102 0038 00000000 		.4byte	.LFB7
 1103 003c 0C000000 		.4byte	.LFE7-.LFB7
 1104 0040 00000000 		.4byte	.LFB8
 1105 0044 0C000000 		.4byte	.LFE8-.LFB8
 1106 0048 00000000 		.4byte	.LFB9
 1107 004c 0C000000 		.4byte	.LFE9-.LFB9
 1108 0050 00000000 		.4byte	.LFB10
 1109 0054 0C000000 		.4byte	.LFE10-.LFB10
 1110 0058 00000000 		.4byte	.LFB11
 1111 005c 0C000000 		.4byte	.LFE11-.LFB11
 1112 0060 00000000 		.4byte	.LFB12
 1113 0064 0C000000 		.4byte	.LFE12-.LFB12
 1114 0068 00000000 		.4byte	.LFB13
 1115 006c 14000000 		.4byte	.LFE13-.LFB13
 1116 0070 00000000 		.4byte	.LFB14
 1117 0074 14000000 		.4byte	.LFE14-.LFB14
 1118 0078 00000000 		.4byte	.LFB0
 1119 007c 30000000 		.4byte	.LFE0-.LFB0
 1120 0080 00000000 		.4byte	.LFB2
 1121 0084 1C000000 		.4byte	.LFE2-.LFB2
 1122 0088 00000000 		.4byte	0
 1123 008c 00000000 		.4byte	0
 1124              		.section	.debug_ranges,"",%progbits
 1125              	.Ldebug_ranges0:
 1126 0000 00000000 		.4byte	.LFB1
 1127 0004 10000000 		.4byte	.LFE1
 1128 0008 00000000 		.4byte	.LFB3
 1129 000c 10000000 		.4byte	.LFE3
 1130 0010 00000000 		.4byte	.LFB4
 1131 0014 0C000000 		.4byte	.LFE4
 1132 0018 00000000 		.4byte	.LFB5
 1133 001c 0C000000 		.4byte	.LFE5
 1134 0020 00000000 		.4byte	.LFB6
 1135 0024 0C000000 		.4byte	.LFE6
 1136 0028 00000000 		.4byte	.LFB7
 1137 002c 0C000000 		.4byte	.LFE7
 1138 0030 00000000 		.4byte	.LFB8
 1139 0034 0C000000 		.4byte	.LFE8
 1140 0038 00000000 		.4byte	.LFB9
 1141 003c 0C000000 		.4byte	.LFE9
 1142 0040 00000000 		.4byte	.LFB10
 1143 0044 0C000000 		.4byte	.LFE10
 1144 0048 00000000 		.4byte	.LFB11
 1145 004c 0C000000 		.4byte	.LFE11
 1146 0050 00000000 		.4byte	.LFB12
 1147 0054 0C000000 		.4byte	.LFE12
 1148 0058 00000000 		.4byte	.LFB13
 1149 005c 14000000 		.4byte	.LFE13
 1150 0060 00000000 		.4byte	.LFB14
 1151 0064 14000000 		.4byte	.LFE14
 1152 0068 00000000 		.4byte	.LFB0
 1153 006c 30000000 		.4byte	.LFE0
 1154 0070 00000000 		.4byte	.LFB2
 1155 0074 1C000000 		.4byte	.LFE2
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccvObFln.s 			page 35


 1156 0078 00000000 		.4byte	0
 1157 007c 00000000 		.4byte	0
 1158              		.section	.debug_line,"",%progbits
 1159              	.Ldebug_line0:
 1160 0000 6E010000 		.section	.debug_str,"MS",%progbits,1
 1160      02004F00 
 1160      00000201 
 1160      FB0E0D00 
 1160      01010101 
 1161              	.LASF18:
 1162 0000 54696D65 		.ascii	"Timer_1_SoftwareCapture\000"
 1162      725F315F 
 1162      536F6674 
 1162      77617265 
 1162      43617074 
 1163              	.LASF26:
 1164 0018 54696D65 		.ascii	"Timer_1_WritePeriod\000"
 1164      725F315F 
 1164      57726974 
 1164      65506572 
 1164      696F6400 
 1165              	.LASF27:
 1166 002c 70657269 		.ascii	"period\000"
 1166      6F6400
 1167              	.LASF3:
 1168 0033 73686F72 		.ascii	"short unsigned int\000"
 1168      7420756E 
 1168      7369676E 
 1168      65642069 
 1168      6E7400
 1169              	.LASF38:
 1170 0046 47656E65 		.ascii	"Generated_Source\\PSoC5\\Timer_1.c\000"
 1170      72617465 
 1170      645F536F 
 1170      75726365 
 1170      5C50536F 
 1171              	.LASF8:
 1172 0067 756E7369 		.ascii	"unsigned int\000"
 1172      676E6564 
 1172      20696E74 
 1172      00
 1173              	.LASF9:
 1174 0074 666C6F61 		.ascii	"float\000"
 1174      7400
 1175              	.LASF30:
 1176 007a 636F756E 		.ascii	"counter\000"
 1176      74657200 
 1177              	.LASF7:
 1178 0082 6C6F6E67 		.ascii	"long long unsigned int\000"
 1178      206C6F6E 
 1178      6720756E 
 1178      7369676E 
 1178      65642069 
 1179              	.LASF1:
 1180 0099 756E7369 		.ascii	"unsigned char\000"
 1180      676E6564 
 1180      20636861 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccvObFln.s 			page 36


 1180      7200
 1181              	.LASF37:
 1182 00a7 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1182      43313120 
 1182      352E342E 
 1182      31203230 
 1182      31363036 
 1183 00da 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1183      20726576 
 1183      6973696F 
 1183      6E203233 
 1183      37373135 
 1184 010d 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1184      66756E63 
 1184      74696F6E 
 1184      2D736563 
 1184      74696F6E 
 1185              	.LASF13:
 1186 0135 72656738 		.ascii	"reg8\000"
 1186      00
 1187              	.LASF25:
 1188 013a 54696D65 		.ascii	"Timer_1_ReadPeriod\000"
 1188      725F315F 
 1188      52656164 
 1188      50657269 
 1188      6F6400
 1189              	.LASF5:
 1190 014d 6C6F6E67 		.ascii	"long unsigned int\000"
 1190      20756E73 
 1190      69676E65 
 1190      6420696E 
 1190      7400
 1191              	.LASF12:
 1192 015f 75696E74 		.ascii	"uint8\000"
 1192      3800
 1193              	.LASF24:
 1194 0165 636F6E74 		.ascii	"control\000"
 1194      726F6C00 
 1195              	.LASF16:
 1196 016d 54696D65 		.ascii	"Timer_1_Enable\000"
 1196      725F315F 
 1196      456E6162 
 1196      6C6500
 1197              	.LASF10:
 1198 017c 646F7562 		.ascii	"double\000"
 1198      6C6500
 1199              	.LASF21:
 1200 0183 54696D65 		.ascii	"Timer_1_SetInterruptMode\000"
 1200      725F315F 
 1200      53657449 
 1200      6E746572 
 1200      72757074 
 1201              	.LASF41:
 1202 019c 54696D65 		.ascii	"Timer_1_initVar\000"
 1202      725F315F 
 1202      696E6974 
 1202      56617200 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccvObFln.s 			page 37


 1203              	.LASF22:
 1204 01ac 54696D65 		.ascii	"Timer_1_WriteControlRegister\000"
 1204      725F315F 
 1204      57726974 
 1204      65436F6E 
 1204      74726F6C 
 1205              	.LASF35:
 1206 01c9 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1206      74657243 
 1206      72697469 
 1206      63616C53 
 1206      65637469 
 1207              	.LASF34:
 1208 01e0 54696D65 		.ascii	"Timer_1_Start\000"
 1208      725F315F 
 1208      53746172 
 1208      7400
 1209              	.LASF33:
 1210 01ee 54696D65 		.ascii	"Timer_1_Init\000"
 1210      725F315F 
 1210      496E6974 
 1210      00
 1211              	.LASF36:
 1212 01fb 43794578 		.ascii	"CyExitCriticalSection\000"
 1212      69744372 
 1212      69746963 
 1212      616C5365 
 1212      6374696F 
 1213              	.LASF29:
 1214 0211 54696D65 		.ascii	"Timer_1_WriteCounter\000"
 1214      725F315F 
 1214      57726974 
 1214      65436F75 
 1214      6E746572 
 1215              	.LASF28:
 1216 0226 54696D65 		.ascii	"Timer_1_ReadCapture\000"
 1216      725F315F 
 1216      52656164 
 1216      43617074 
 1216      75726500 
 1217              	.LASF40:
 1218 023a 54696D65 		.ascii	"Timer_1_interruptState\000"
 1218      725F315F 
 1218      696E7465 
 1218      72727570 
 1218      74537461 
 1219              	.LASF15:
 1220 0251 73697A65 		.ascii	"sizetype\000"
 1220      74797065 
 1220      00
 1221              	.LASF6:
 1222 025a 6C6F6E67 		.ascii	"long long int\000"
 1222      206C6F6E 
 1222      6720696E 
 1222      7400
 1223              	.LASF23:
 1224 0268 696E7465 		.ascii	"interruptMode\000"
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccvObFln.s 			page 38


 1224      72727570 
 1224      744D6F64 
 1224      6500
 1225              	.LASF31:
 1226 0276 54696D65 		.ascii	"Timer_1_ReadCounter\000"
 1226      725F315F 
 1226      52656164 
 1226      436F756E 
 1226      74657200 
 1227              	.LASF32:
 1228 028a 54696D65 		.ascii	"Timer_1_ClearFIFO\000"
 1228      725F315F 
 1228      436C6561 
 1228      72464946 
 1228      4F00
 1229              	.LASF20:
 1230 029c 54696D65 		.ascii	"Timer_1_ReadControlRegister\000"
 1230      725F315F 
 1230      52656164 
 1230      436F6E74 
 1230      726F6C52 
 1231              	.LASF2:
 1232 02b8 73686F72 		.ascii	"short int\000"
 1232      7420696E 
 1232      7400
 1233              	.LASF19:
 1234 02c2 54696D65 		.ascii	"Timer_1_ReadStatusRegister\000"
 1234      725F315F 
 1234      52656164 
 1234      53746174 
 1234      75735265 
 1235              	.LASF39:
 1236 02dd 523A5C56 		.ascii	"R:\\VScode\\GIT\\PSoC5_VS_Creator\\PSoC_Creator.cyd"
 1236      53636F64 
 1236      655C4749 
 1236      545C5053 
 1236      6F43355F 
 1237 030c 736E00   		.ascii	"sn\000"
 1238              	.LASF4:
 1239 030f 6C6F6E67 		.ascii	"long int\000"
 1239      20696E74 
 1239      00
 1240              	.LASF11:
 1241 0318 63686172 		.ascii	"char\000"
 1241      00
 1242              	.LASF14:
 1243 031d 6C6F6E67 		.ascii	"long double\000"
 1243      20646F75 
 1243      626C6500 
 1244              	.LASF0:
 1245 0329 7369676E 		.ascii	"signed char\000"
 1245      65642063 
 1245      68617200 
 1246              	.LASF17:
 1247 0335 54696D65 		.ascii	"Timer_1_Stop\000"
 1247      725F315F 
 1247      53746F70 
ARM GAS  C:\Users\Rolf\AppData\Local\Temp\ccvObFln.s 			page 39


 1247      00
 1248              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
